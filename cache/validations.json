{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "da8117acb95ad7501ce30d69d9ed1017efbe31bc3d17599161c2dc8bbb337161",
          "withoutMetadata": "d49d5aba4f4bf5f5086ab979e6d0e86ea7d9c4ff87681435e220ad0f2ee51f3c",
          "linkedWithoutMetadata": "d49d5aba4f4bf5f5086ab979e6d0e86ea7d9c4ff87681435e220ad0f2ee51f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:16"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:22"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "0b61398e35a79594e417c7eeee6433783556500f9b4edf8c6906bfbe292416f1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "587963056bc2a61a9a57e70910fea86ad993afbe53ff3d53210954e208ca5259",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "730c35721f2dd13d9b6c8f74e08517df73dedde5ab1bc3ead644fba6cf0274d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "contracts/MegaNFT.sol:MegaNFT": {
        "src": "contracts/MegaNFT.sol:8",
        "version": {
          "withMetadata": "23346c93dfede042a9a4a069c693f1b993f7872c7d355e51bb7c8aba89398ccc",
          "withoutMetadata": "23346c93dfede042a9a4a069c693f1b993f7872c7d355e51bb7c8aba89398ccc",
          "linkedWithoutMetadata": "23346c93dfede042a9a4a069c693f1b993f7872c7d355e51bb7c8aba89398ccc"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string,address)",
          "mint(uint256)",
          "mint(address,uint256)",
          "internalMint(address,uint256)",
          "changePrice(uint256)",
          "listAllNFTAndOwner()",
          "tokenURI(uint256)",
          "pauseContract()",
          "unpauseContract()",
          "listMyNFTs(address)",
          "withdraw()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MegaNFT",
            "src": "contracts/MegaNFT.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:16"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:22"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:25"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "contractPaused",
              "offset": 20,
              "slot": "10",
              "type": "t_bool",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:12"
            },
            {
              "label": "baseTokenURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:13"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:14"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.16"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "da8117acb95ad7501ce30d69d9ed1017efbe31bc3d17599161c2dc8bbb337161",
          "withoutMetadata": "d49d5aba4f4bf5f5086ab979e6d0e86ea7d9c4ff87681435e220ad0f2ee51f3c",
          "linkedWithoutMetadata": "d49d5aba4f4bf5f5086ab979e6d0e86ea7d9c4ff87681435e220ad0f2ee51f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:16"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:22"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "0b61398e35a79594e417c7eeee6433783556500f9b4edf8c6906bfbe292416f1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "587963056bc2a61a9a57e70910fea86ad993afbe53ff3d53210954e208ca5259",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "730c35721f2dd13d9b6c8f74e08517df73dedde5ab1bc3ead644fba6cf0274d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.16"
      },
      "contracts/MegaNFT.sol:MegaNFT": {
        "src": "contracts/MegaNFT.sol:8",
        "version": {
          "withMetadata": "23346c93dfede042a9a4a069c693f1b993f7872c7d355e51bb7c8aba89398ccc",
          "withoutMetadata": "23346c93dfede042a9a4a069c693f1b993f7872c7d355e51bb7c8aba89398ccc",
          "linkedWithoutMetadata": "23346c93dfede042a9a4a069c693f1b993f7872c7d355e51bb7c8aba89398ccc"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string,address)",
          "mint(uint256)",
          "mint(address,uint256)",
          "internalMint(address,uint256)",
          "changePrice(uint256)",
          "listAllNFTAndOwner()",
          "tokenURI(uint256)",
          "pauseContract()",
          "unpauseContract()",
          "listMyNFTs(address)",
          "withdraw()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MegaNFT",
            "src": "contracts/MegaNFT.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:16"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:22"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:25"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "contractPaused",
              "offset": 20,
              "slot": "10",
              "type": "t_bool",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:12"
            },
            {
              "label": "baseTokenURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:13"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:14"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.16"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "96a5089246bc744b24164f13ee44769dac1609b889cae9ad8755a9a81eb04410",
          "withoutMetadata": "b82d596ec6292f8b80e2ab6852d7041d31471ffd6f2adcfa16c42e300bcf8f33",
          "linkedWithoutMetadata": "b82d596ec6292f8b80e2ab6852d7041d31471ffd6f2adcfa16c42e300bcf8f33"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:16"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:22"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "42721057893478fd5f3fe4cf156187d869f3bbdb7a57bb7b419844aa6f0b9137",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "677c33375097c2e47c9ff101c81593d6da40a19959913c5daef77ed60c7316a6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "624fc9b80077b1c123b9005abd612a8e2d0e14fc96eb36e0b7b8b84aefb5318d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "90d9141b73fe6afe513dea86e416eb45164fba8a8ac1a4cf8494455c4c9cbcdc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "contracts/MegaNFT.sol:MegaNFT": {
        "src": "contracts/MegaNFT.sol:11",
        "version": {
          "withMetadata": "f82153eb6a8713c4d0acab4a772983be3341285da166714b2c879a39d19f8c18",
          "withoutMetadata": "fde429835486e629b710a9169b87dbf1a45476e8c6b75ae40d7fdaa8621c4f84",
          "linkedWithoutMetadata": "fde429835486e629b710a9169b87dbf1a45476e8c6b75ae40d7fdaa8621c4f84"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "tokenURI(uint256)",
          "levelOfId(uint256)",
          "levelMint(uint256,uint256)",
          "internalLevelMint(address,uint256,uint256)",
          "changeSaleState(bool)",
          "changeLevelPrice(uint256,uint256)",
          "listMyNFTs(address)",
          "setBaseURI(string)",
          "withdraw()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MegaNFT",
            "src": "contracts/MegaNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/MegaNFT.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "saleStarted",
            "src": "contracts/MegaNFT.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:16"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:22"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:25"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_baseTokenURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:16"
            },
            {
              "label": "_levelOfId",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:18"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:19"
            },
            {
              "label": "mintLimitPerLevel",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:21"
            },
            {
              "label": "mintPricePerLevel",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:22"
            },
            {
              "label": "mintedPerLevel",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:23"
            },
            {
              "label": "saleStarted",
              "offset": 0,
              "slot": "17",
              "type": "t_bool",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.15"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "96a5089246bc744b24164f13ee44769dac1609b889cae9ad8755a9a81eb04410",
          "withoutMetadata": "b82d596ec6292f8b80e2ab6852d7041d31471ffd6f2adcfa16c42e300bcf8f33",
          "linkedWithoutMetadata": "b82d596ec6292f8b80e2ab6852d7041d31471ffd6f2adcfa16c42e300bcf8f33"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:16"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:22"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "42721057893478fd5f3fe4cf156187d869f3bbdb7a57bb7b419844aa6f0b9137",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "677c33375097c2e47c9ff101c81593d6da40a19959913c5daef77ed60c7316a6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "624fc9b80077b1c123b9005abd612a8e2d0e14fc96eb36e0b7b8b84aefb5318d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "90d9141b73fe6afe513dea86e416eb45164fba8a8ac1a4cf8494455c4c9cbcdc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.15"
      },
      "contracts/MegaNFT.sol:MegaNFT": {
        "src": "contracts/MegaNFT.sol:11",
        "version": {
          "withMetadata": "f82153eb6a8713c4d0acab4a772983be3341285da166714b2c879a39d19f8c18",
          "withoutMetadata": "fde429835486e629b710a9169b87dbf1a45476e8c6b75ae40d7fdaa8621c4f84",
          "linkedWithoutMetadata": "fde429835486e629b710a9169b87dbf1a45476e8c6b75ae40d7fdaa8621c4f84"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "tokenURI(uint256)",
          "levelOfId(uint256)",
          "levelMint(uint256,uint256)",
          "internalLevelMint(address,uint256,uint256)",
          "changeSaleState(bool)",
          "changeLevelPrice(uint256,uint256)",
          "listMyNFTs(address)",
          "setBaseURI(string)",
          "withdraw()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MegaNFT",
            "src": "contracts/MegaNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSupply",
            "src": "contracts/MegaNFT.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "saleStarted",
            "src": "contracts/MegaNFT.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:16"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:22"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:25"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_baseTokenURI",
              "offset": 0,
              "slot": "11",
              "type": "t_string_storage",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:16"
            },
            {
              "label": "_levelOfId",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:18"
            },
            {
              "label": "maxSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:19"
            },
            {
              "label": "mintLimitPerLevel",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:21"
            },
            {
              "label": "mintPricePerLevel",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:22"
            },
            {
              "label": "mintedPerLevel",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:23"
            },
            {
              "label": "saleStarted",
              "offset": 0,
              "slot": "17",
              "type": "t_bool",
              "contract": "MegaNFT",
              "src": "contracts/MegaNFT.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.15"
      }
    },
    {
      "contracts/NoDelegateCall.sol:NoDelegateCall": {
        "src": "contracts/NoDelegateCall.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NoDelegateCall",
            "src": "contracts/NoDelegateCall.sol:10"
          },
          {
            "kind": "state-variable-immutable",
            "name": "original",
            "src": "contracts/NoDelegateCall.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/UniswapV3Factory.sol:UniswapV3Factory": {
        "src": "contracts/UniswapV3Factory.sol:13",
        "version": {
          "withMetadata": "2e5cd618d21e1e2b2da5cca814d19f0ab3cb51e4d66022e6b1ee3e55f3162a54",
          "withoutMetadata": "2e5cd618d21e1e2b2da5cca814d19f0ab3cb51e4d66022e6b1ee3e55f3162a54",
          "linkedWithoutMetadata": "2e5cd618d21e1e2b2da5cca814d19f0ab3cb51e4d66022e6b1ee3e55f3162a54"
        },
        "inherit": [
          "contracts/NoDelegateCall.sol:NoDelegateCall",
          "contracts/UniswapV3PoolDeployer.sol:UniswapV3PoolDeployer",
          "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer",
          "contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapV3Factory",
            "src": "contracts/UniswapV3Factory.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parameters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Parameters)2811_storage",
              "contract": "UniswapV3PoolDeployer",
              "src": "contracts/UniswapV3PoolDeployer.sol:18"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "UniswapV3Factory",
              "src": "contracts/UniswapV3Factory.sol:15"
            },
            {
              "label": "feeAmountTickSpacing",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint24,t_int24)",
              "contract": "UniswapV3Factory",
              "src": "contracts/UniswapV3Factory.sol:18"
            },
            {
              "label": "getPool",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint24,t_address)))",
              "contract": "UniswapV3Factory",
              "src": "contracts/UniswapV3Factory.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint24,t_address)))": {
              "label": "mapping(address => mapping(address => mapping(uint24 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
              "label": "mapping(address => mapping(uint24 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint24,t_address)": {
              "label": "mapping(uint24 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint24,t_int24)": {
              "label": "mapping(uint24 => int24)",
              "numberOfBytes": "32"
            },
            "t_struct(Parameters)2811_storage": {
              "label": "struct UniswapV3PoolDeployer.Parameters",
              "members": [
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "tickSpacing",
                  "type": "t_int24",
                  "offset": 23,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/UniswapV3Pool.sol:UniswapV3Pool": {
        "src": "contracts/UniswapV3Pool.sol:30",
        "version": {
          "withMetadata": "a54701ee9fcb23f972ca19247dc5e8b0cccecae798ceacdb5d036c7da6675ab0",
          "withoutMetadata": "bc782bd3d8fd548d7db7877df6ecaea1a82e4790e0ed421f0156b96598cbebf1",
          "linkedWithoutMetadata": "bc782bd3d8fd548d7db7877df6ecaea1a82e4790e0ed421f0156b96598cbebf1"
        },
        "inherit": [
          "contracts/NoDelegateCall.sol:NoDelegateCall",
          "contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool",
          "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/Tick.sol:Tick",
          "contracts/libraries/TickBitmap.sol:TickBitmap",
          "contracts/libraries/Position.sol:Position",
          "contracts/libraries/Oracle.sol:Oracle",
          "contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath",
          "contracts/libraries/LiquidityMath.sol:LiquidityMath",
          "contracts/libraries/TransferHelper.sol:TransferHelper",
          "contracts/libraries/SwapMath.sol:SwapMath",
          "contracts/libraries/FixedPoint128.sol:FixedPoint128",
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [
          "()",
          "snapshotCumulativesInside(int24,int24)",
          "observe(uint32[])",
          "increaseObservationCardinalityNext(uint16)",
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapV3Pool",
            "src": "contracts/UniswapV3Pool.sol:117"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts/UniswapV3Pool.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token0",
            "src": "contracts/UniswapV3Pool.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token1",
            "src": "contracts/UniswapV3Pool.sol:46"
          },
          {
            "kind": "state-variable-immutable",
            "name": "fee",
            "src": "contracts/UniswapV3Pool.sol:48"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tickSpacing",
            "src": "contracts/UniswapV3Pool.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxLiquidityPerTick",
            "src": "contracts/UniswapV3Pool.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "slot0",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Slot0)415_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:74"
            },
            {
              "label": "feeGrowthGlobal0X128",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:77"
            },
            {
              "label": "feeGrowthGlobal1X128",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:79"
            },
            {
              "label": "protocolFees",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(ProtocolFees)432_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:87"
            },
            {
              "label": "liquidity",
              "offset": 0,
              "slot": "4",
              "type": "t_uint128",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:90"
            },
            {
              "label": "ticks",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:93"
            },
            {
              "label": "tickBitmap",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:95"
            },
            {
              "label": "positions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_struct(Info)4924_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:97"
            },
            {
              "label": "observations",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_struct(Observation)4184_storage)65535_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:99"
            }
          ],
          "types": {
            "t_array(t_struct(Observation)4184_storage)65535_storage": {
              "label": "struct Oracle.Observation[65535]",
              "numberOfBytes": "2097120"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_bytes32,t_struct(Info)4924_storage)": {
              "label": "mapping(bytes32 => struct Position.Info)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)4924_storage": {
              "label": "struct Position.Info",
              "members": [
                {
                  "label": "liquidity",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthInside0LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthInside1LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokensOwed0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "tokensOwed1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Observation)4184_storage": {
              "label": "struct Oracle.Observation",
              "members": [
                {
                  "label": "blockTimestamp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickCumulative",
                  "type": "t_int56",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "secondsPerLiquidityCumulativeX128",
                  "type": "t_uint160",
                  "offset": 11,
                  "slot": "0"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ProtocolFees)432_storage": {
              "label": "struct UniswapV3Pool.ProtocolFees",
              "members": [
                {
                  "label": "token0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Slot0)415_storage": {
              "label": "struct UniswapV3Pool.Slot0",
              "members": [
                {
                  "label": "sqrtPriceX96",
                  "type": "t_uint160",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tick",
                  "type": "t_int24",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "observationIndex",
                  "type": "t_uint16",
                  "offset": 23,
                  "slot": "0"
                },
                {
                  "label": "observationCardinality",
                  "type": "t_uint16",
                  "offset": 25,
                  "slot": "0"
                },
                {
                  "label": "observationCardinalityNext",
                  "type": "t_uint16",
                  "offset": 27,
                  "slot": "0"
                },
                {
                  "label": "feeProtocol",
                  "type": "t_uint8",
                  "offset": 29,
                  "slot": "0"
                },
                {
                  "label": "unlocked",
                  "type": "t_bool",
                  "offset": 30,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/UniswapV3PoolDeployer.sol:UniswapV3PoolDeployer": {
        "src": "contracts/UniswapV3PoolDeployer.sol:8",
        "version": {
          "withMetadata": "3cd46af3c2a3145b9ccb35e16ce7f374a708b19c68f48b4f2e82dc129340a677",
          "withoutMetadata": "84a9cab36b941e3aedd10f518e73972eb6b5dcf62adec747c989c44f54f58aa4",
          "linkedWithoutMetadata": "84a9cab36b941e3aedd10f518e73972eb6b5dcf62adec747c989c44f54f58aa4"
        },
        "inherit": [
          "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "parameters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Parameters)2811_storage",
              "contract": "UniswapV3PoolDeployer",
              "src": "contracts/UniswapV3PoolDeployer.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_struct(Parameters)2811_storage": {
              "label": "struct UniswapV3PoolDeployer.Parameters",
              "members": [
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "tickSpacing",
                  "type": "t_int24",
                  "offset": 23,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IERC20Minimal.sol:IERC20Minimal": {
        "src": "contracts/interfaces/IERC20Minimal.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory": {
        "src": "contracts/interfaces/IUniswapV3Factory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer": {
        "src": "contracts/interfaces/IUniswapV3PoolDeployer.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "parameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/callback/IUniswapV3FlashCallback.sol:IUniswapV3FlashCallback": {
        "src": "contracts/interfaces/callback/IUniswapV3FlashCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3FlashCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/callback/IUniswapV3MintCallback.sol:IUniswapV3MintCallback": {
        "src": "contracts/interfaces/callback/IUniswapV3MintCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3MintCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/BitMath.sol:BitMath": {
        "src": "contracts/libraries/BitMath.sol:6",
        "version": {
          "withMetadata": "5c8f0fd371b886d5479bb3866f246d74c8925736beeb49b907402f3c8df86dc2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/FixedPoint128.sol:FixedPoint128": {
        "src": "contracts/libraries/FixedPoint128.sol:6",
        "version": {
          "withMetadata": "fc40e9597aa8cd5441f0d84bec7260aeb77d48647b9a25cc0b89590bcf20096b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/FixedPoint96.sol:FixedPoint96": {
        "src": "contracts/libraries/FixedPoint96.sol:7",
        "version": {
          "withMetadata": "3d72b830d128ac36b6030a6ad6c4e4105315190e98aed43197f8e98715f477c7",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/FullMath.sol:FullMath": {
        "src": "contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "c644980f15ed740d78677dac324c5d2cc00a63e74f284c539ac02c6a7ee7c25f",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/LiquidityMath.sol:LiquidityMath": {
        "src": "contracts/libraries/LiquidityMath.sol:5",
        "version": {
          "withMetadata": "f6799495dcaeb87aa6f2c5a08b5047f1438fb8ff10dabb68db0239c9374051fe",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath": {
        "src": "contracts/libraries/LowGasSafeMath.sol:6",
        "version": {
          "withMetadata": "b685c41ba08b78bd0e9b9689b8b3edee4040fd747a4abee7a4e768ea87f0ff60",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/Oracle.sol:Oracle": {
        "src": "contracts/libraries/Oracle.sol:11",
        "version": {
          "withMetadata": "8ea2f288d244d59901cfd97b99f54e13c0ae672de0720b2e9461c8550733de1f",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/Position.sol:Position": {
        "src": "contracts/libraries/Position.sol:11",
        "version": {
          "withMetadata": "a68dcf6d40320aa23cd8ea648ed7f4cc2bd8cd944450dcf020e9d12149f69baf",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LiquidityMath.sol:LiquidityMath",
          "contracts/libraries/FixedPoint128.sol:FixedPoint128",
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/SafeCast.sol:SafeCast": {
        "src": "contracts/libraries/SafeCast.sol:6",
        "version": {
          "withMetadata": "65b49579da503591c4bc341b362aff2ac600a6ea40977ee04605b936059a55fe",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath": {
        "src": "contracts/libraries/SqrtPriceMath.sol:13",
        "version": {
          "withMetadata": "089e04eda6da74524c67e6b7ce1bc6626dcaae729f029ae579c7146da6711305",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/FixedPoint96.sol:FixedPoint96",
          "contracts/libraries/FullMath.sol:FullMath",
          "contracts/libraries/UnsafeMath.sol:UnsafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/SwapMath.sol:SwapMath": {
        "src": "contracts/libraries/SwapMath.sol:9",
        "version": {
          "withMetadata": "301fdca028cf26a04112ef6a98f8cf3e82f44800998dcd806a2d78c2b8c1e06b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath",
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/Tick.sol:Tick": {
        "src": "contracts/libraries/Tick.sol:12",
        "version": {
          "withMetadata": "840b8af6517151751cc441959024ea5d8e1848dd9667ff882a8dd453e94be0bb",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/LiquidityMath.sol:LiquidityMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TickBitmap.sol:TickBitmap": {
        "src": "contracts/libraries/TickBitmap.sol:9",
        "version": {
          "withMetadata": "9b6948e018c22ee91fe2a0ac299404cd5d9eafee43b3e1e5f9ad8a1b0959712c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TickMath.sol:TickMath": {
        "src": "contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "f42c3ba9ae5d31b8595f37dbc6765b4076c1d6638eccec55021348942302b147",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "contracts/libraries/TransferHelper.sol:8",
        "version": {
          "withMetadata": "ea93e7f40cbce8c11b8da7dac7883680b4672408bfed464fab07dd998239dadd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/UnsafeMath.sol:UnsafeMath": {
        "src": "contracts/libraries/UnsafeMath.sol:6",
        "version": {
          "withMetadata": "c1436620d3426ccd8053afb4c9276b2f8e2f11b994c146232847ee672c191fd6",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/BitMathEchidnaTest.sol:BitMathEchidnaTest": {
        "src": "contracts/test/BitMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "138595fa2c4107be18f2f8c8dee8863920cae111747df5afb966f98107a66d24",
          "withoutMetadata": "4b159fa1d5e7263a49b144c2b7bd670030560816c5963b46d76cb94ab5e05fee",
          "linkedWithoutMetadata": "4b159fa1d5e7263a49b144c2b7bd670030560816c5963b46d76cb94ab5e05fee"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [
          "mostSignificantBitInvariant(uint256)",
          "leastSignificantBitInvariant(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/BitMathTest.sol:BitMathTest": {
        "src": "contracts/test/BitMathTest.sol:6",
        "version": {
          "withMetadata": "3e104710fc3ef1a3a8cbabd4b4b892a42a95d4a9be6ae6487cc9578acadaa2a5",
          "withoutMetadata": "1125f4d5481694b9a7e4f762aed8201016097ba25e4d1c4ff7511844bac6058c",
          "linkedWithoutMetadata": "1125f4d5481694b9a7e4f762aed8201016097ba25e4d1c4ff7511844bac6058c"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [
          "mostSignificantBit(uint256)",
          "getGasCostOfMostSignificantBit(uint256)",
          "leastSignificantBit(uint256)",
          "getGasCostOfLeastSignificantBit(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/FullMathEchidnaTest.sol:FullMathEchidnaTest": {
        "src": "contracts/test/FullMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "38665b7cd5c7ce11fa39f92f20ca7366f86e7c1ad9efc99073de029e2990b488",
          "withoutMetadata": "4d86e38b0b53f17b137ab364ac374bdcfdd1cda564b356af9ecf9fbbfb6efe80",
          "linkedWithoutMetadata": "4d86e38b0b53f17b137ab364ac374bdcfdd1cda564b356af9ecf9fbbfb6efe80"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [
          "checkMulDivRounding(uint256,uint256,uint256)",
          "checkMulDiv(uint256,uint256,uint256)",
          "checkMulDivRoundingUp(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/FullMathTest.sol:FullMathTest": {
        "src": "contracts/test/FullMathTest.sol:6",
        "version": {
          "withMetadata": "fc53882cbfa01bcd2f1358c966d84145861d00e747be434bf16fb4f437529e88",
          "withoutMetadata": "970dc1453c578cc3279e8aa8302183616da3525c3a2a65bfebb5b545126556f2",
          "linkedWithoutMetadata": "970dc1453c578cc3279e8aa8302183616da3525c3a2a65bfebb5b545126556f2"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [
          "mulDiv(uint256,uint256,uint256)",
          "mulDivRoundingUp(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/LiquidityMathTest.sol:LiquidityMathTest": {
        "src": "contracts/test/LiquidityMathTest.sol:6",
        "version": {
          "withMetadata": "60cc7971ca92d9fa349c266aa07617623de6b94bd9f2cfc29eb18096621cabfd",
          "withoutMetadata": "6d63f17d41f52f826851bc0055f5903f19c15d5d1cee38d0c136edeaa615078e",
          "linkedWithoutMetadata": "6d63f17d41f52f826851bc0055f5903f19c15d5d1cee38d0c136edeaa615078e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LiquidityMath.sol:LiquidityMath"
        ],
        "methods": [
          "addDelta(uint128,int128)",
          "getGasCostOfAddDelta(uint128,int128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/LowGasSafeMathEchidnaTest.sol:LowGasSafeMathEchidnaTest": {
        "src": "contracts/test/LowGasSafeMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "c03c3b20869857c0c5947f30aff5a647c4296100e0d773959938c320134d9920",
          "withoutMetadata": "faba97e8f5f45abc18bfc1b54eeed71a923713d4a8b06e4864aba6df8656cb7e",
          "linkedWithoutMetadata": "faba97e8f5f45abc18bfc1b54eeed71a923713d4a8b06e4864aba6df8656cb7e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath"
        ],
        "methods": [
          "checkAdd(uint256,uint256)",
          "checkSub(uint256,uint256)",
          "checkMul(uint256,uint256)",
          "checkAddi(int256,int256)",
          "checkSubi(int256,int256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/MockTimeUniswapV3Pool.sol:MockTimeUniswapV3Pool": {
        "src": "contracts/test/MockTimeUniswapV3Pool.sol:7",
        "version": {
          "withMetadata": "6d7d9b0ce9390a166c66ca7bd292802d67c0279fca52511338124b11b5afa9e3",
          "withoutMetadata": "f253380514ab84439f5320c65dddeae434e2a01f801a949d30da51a6e9f10b6c",
          "linkedWithoutMetadata": "f253380514ab84439f5320c65dddeae434e2a01f801a949d30da51a6e9f10b6c"
        },
        "inherit": [
          "contracts/UniswapV3Pool.sol:UniswapV3Pool",
          "contracts/NoDelegateCall.sol:NoDelegateCall",
          "contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool",
          "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [
          "setFeeGrowthGlobal0X128(uint256)",
          "setFeeGrowthGlobal1X128(uint256)",
          "advanceTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "time",
            "src": "contracts/test/MockTimeUniswapV3Pool.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "slot0",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Slot0)415_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:74"
            },
            {
              "label": "feeGrowthGlobal0X128",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:77"
            },
            {
              "label": "feeGrowthGlobal1X128",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:79"
            },
            {
              "label": "protocolFees",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(ProtocolFees)432_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:87"
            },
            {
              "label": "liquidity",
              "offset": 0,
              "slot": "4",
              "type": "t_uint128",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:90"
            },
            {
              "label": "ticks",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:93"
            },
            {
              "label": "tickBitmap",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:95"
            },
            {
              "label": "positions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_struct(Info)4924_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:97"
            },
            {
              "label": "observations",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_struct(Observation)4184_storage)65535_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:99"
            },
            {
              "label": "time",
              "offset": 0,
              "slot": "65543",
              "type": "t_uint256",
              "contract": "MockTimeUniswapV3Pool",
              "src": "contracts/test/MockTimeUniswapV3Pool.sol:9"
            }
          ],
          "types": {
            "t_array(t_struct(Observation)4184_storage)65535_storage": {
              "label": "struct Oracle.Observation[65535]",
              "numberOfBytes": "2097120"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_bytes32,t_struct(Info)4924_storage)": {
              "label": "mapping(bytes32 => struct Position.Info)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)4924_storage": {
              "label": "struct Position.Info",
              "members": [
                {
                  "label": "liquidity",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthInside0LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthInside1LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokensOwed0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "tokensOwed1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Observation)4184_storage": {
              "label": "struct Oracle.Observation",
              "members": [
                {
                  "label": "blockTimestamp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickCumulative",
                  "type": "t_int56",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "secondsPerLiquidityCumulativeX128",
                  "type": "t_uint160",
                  "offset": 11,
                  "slot": "0"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ProtocolFees)432_storage": {
              "label": "struct UniswapV3Pool.ProtocolFees",
              "members": [
                {
                  "label": "token0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Slot0)415_storage": {
              "label": "struct UniswapV3Pool.Slot0",
              "members": [
                {
                  "label": "sqrtPriceX96",
                  "type": "t_uint160",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tick",
                  "type": "t_int24",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "observationIndex",
                  "type": "t_uint16",
                  "offset": 23,
                  "slot": "0"
                },
                {
                  "label": "observationCardinality",
                  "type": "t_uint16",
                  "offset": 25,
                  "slot": "0"
                },
                {
                  "label": "observationCardinalityNext",
                  "type": "t_uint16",
                  "offset": 27,
                  "slot": "0"
                },
                {
                  "label": "feeProtocol",
                  "type": "t_uint8",
                  "offset": 29,
                  "slot": "0"
                },
                {
                  "label": "unlocked",
                  "type": "t_bool",
                  "offset": 30,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/MockTimeUniswapV3PoolDeployer.sol:MockTimeUniswapV3PoolDeployer": {
        "src": "contracts/test/MockTimeUniswapV3PoolDeployer.sol:8",
        "version": {
          "withMetadata": "2f7298f5ec0a712b622dd787883f9b5de25fede9d49ee7bd3de7eb1a0504fe76",
          "withoutMetadata": "0be599d32e0c534b889f1ce6061bc26ec554cf5cec457359c69c6dab99d11cbe",
          "linkedWithoutMetadata": "0be599d32e0c534b889f1ce6061bc26ec554cf5cec457359c69c6dab99d11cbe"
        },
        "inherit": [
          "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer"
        ],
        "libraries": [],
        "methods": [
          "deploy(address,address,address,uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "parameters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Parameters)7983_storage",
              "contract": "MockTimeUniswapV3PoolDeployer",
              "src": "contracts/test/MockTimeUniswapV3PoolDeployer.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_struct(Parameters)7983_storage": {
              "label": "struct MockTimeUniswapV3PoolDeployer.Parameters",
              "members": [
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "tickSpacing",
                  "type": "t_int24",
                  "offset": 23,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/NoDelegateCallTest.sol:NoDelegateCallTest": {
        "src": "contracts/test/NoDelegateCallTest.sol:6",
        "version": {
          "withMetadata": "763c285ab33caf410966afedbcbe816ef8d78346203b8a38dbac24e82d9a7600",
          "withoutMetadata": "f6986b5861202c2c75821dd3fac18c071e081dc4cb110719a4ad75fb35e587b1",
          "linkedWithoutMetadata": "f6986b5861202c2c75821dd3fac18c071e081dc4cb110719a4ad75fb35e587b1"
        },
        "inherit": [
          "contracts/NoDelegateCall.sol:NoDelegateCall"
        ],
        "libraries": [],
        "methods": [
          "canBeDelegateCalled()",
          "cannotBeDelegateCalled()",
          "getGasCostOfCanBeDelegateCalled()",
          "getGasCostOfCannotBeDelegateCalled()",
          "callsIntoNoDelegateCallFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/OracleEchidnaTest.sol:OracleEchidnaTest": {
        "src": "contracts/test/OracleEchidnaTest.sol:7",
        "version": {
          "withMetadata": "669701955934347bd944d6afb9c14d89db50ba602d126d7520f228a4ec742848",
          "withoutMetadata": "25c5e808e6b627bc3594a5427c0f1c6eb65bdbcc717476975128fcfbda226b99",
          "linkedWithoutMetadata": "25c5e808e6b627bc3594a5427c0f1c6eb65bdbcc717476975128fcfbda226b99"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "initialize(uint32,int24,uint128)",
          "advanceTime(uint32)",
          "update(uint32,int24,uint128)",
          "grow(uint16)",
          "echidna_indexAlwaysLtCardinality()",
          "echidna_AlwaysInitialized()",
          "echidna_cardinalityAlwaysLteNext()",
          "echidna_canAlwaysObserve0IfInitialized()",
          "checkTwoAdjacentObservationsTickCumulativeModTimeElapsedAlways0(uint16)",
          "checkTimeWeightedAveragesAlwaysFitsType(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleEchidnaTest",
            "src": "contracts/test/OracleEchidnaTest.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(OracleTest)9021",
              "contract": "OracleEchidnaTest",
              "src": "contracts/test/OracleEchidnaTest.sol:8"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "OracleEchidnaTest",
              "src": "contracts/test/OracleEchidnaTest.sol:10"
            },
            {
              "label": "timePassed",
              "offset": 21,
              "slot": "0",
              "type": "t_uint32",
              "contract": "OracleEchidnaTest",
              "src": "contracts/test/OracleEchidnaTest.sol:11"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(OracleTest)9021": {
              "label": "contract OracleTest",
              "numberOfBytes": "20"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/OracleTest.sol:OracleTest": {
        "src": "contracts/test/OracleTest.sol:7",
        "version": {
          "withMetadata": "5c429be877ca1d7ed023be14e15cde2dde66c2acb494680542a907e82b3dd66e",
          "withoutMetadata": "c367263c871c889f7e79b4c9ff217d514424fc244db03c2cb7d70b2e9c0ee501",
          "linkedWithoutMetadata": "c367263c871c889f7e79b4c9ff217d514424fc244db03c2cb7d70b2e9c0ee501"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Oracle.sol:Oracle"
        ],
        "methods": [
          "initialize((uint32,int24,uint128))",
          "advanceTime(uint32)",
          "update((uint32,int24,uint128))",
          "batchUpdate(struct OracleTest.UpdateParams[])",
          "grow(uint16)",
          "observe(uint32[])",
          "getGasCostOfObserve(uint32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "observations",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(Observation)4184_storage)65535_storage",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:10"
            },
            {
              "label": "time",
              "offset": 0,
              "slot": "65535",
              "type": "t_uint32",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:12"
            },
            {
              "label": "tick",
              "offset": 4,
              "slot": "65535",
              "type": "t_int24",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:13"
            },
            {
              "label": "liquidity",
              "offset": 7,
              "slot": "65535",
              "type": "t_uint128",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:14"
            },
            {
              "label": "index",
              "offset": 23,
              "slot": "65535",
              "type": "t_uint16",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:15"
            },
            {
              "label": "cardinality",
              "offset": 25,
              "slot": "65535",
              "type": "t_uint16",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:16"
            },
            {
              "label": "cardinalityNext",
              "offset": 27,
              "slot": "65535",
              "type": "t_uint16",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:17"
            }
          ],
          "types": {
            "t_array(t_struct(Observation)4184_storage)65535_storage": {
              "label": "struct Oracle.Observation[65535]",
              "numberOfBytes": "2097120"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_struct(Observation)4184_storage": {
              "label": "struct Oracle.Observation",
              "members": [
                {
                  "label": "blockTimestamp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickCumulative",
                  "type": "t_int56",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "secondsPerLiquidityCumulativeX128",
                  "type": "t_uint160",
                  "offset": 11,
                  "slot": "0"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SqrtPriceMathEchidnaTest.sol:SqrtPriceMathEchidnaTest": {
        "src": "contracts/test/SqrtPriceMathEchidnaTest.sol:8",
        "version": {
          "withMetadata": "f551e6400b8d90c1b4857acbfeb45f87ca8feef58b390d3ffef62d3c2241d176",
          "withoutMetadata": "321744a6ab5bf4adf84c3dc1103a1712b42f534a63319a1cf1ada2c5e925afca",
          "linkedWithoutMetadata": "321744a6ab5bf4adf84c3dc1103a1712b42f534a63319a1cf1ada2c5e925afca"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/FullMath.sol:FullMath",
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath",
          "contracts/libraries/FixedPoint96.sol:FixedPoint96"
        ],
        "methods": [
          "mulDivRoundingUpInvariants(uint256,uint256,uint256)",
          "getNextSqrtPriceFromInputInvariants(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromOutputInvariants(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromAmount0RoundingUpInvariants(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromAmount1RoundingDownInvariants(uint160,uint128,uint256,bool)",
          "getAmount0DeltaInvariants(uint160,uint160,uint128)",
          "getAmount0DeltaEquivalency(uint160,uint160,uint128,bool)",
          "getAmount1DeltaInvariants(uint160,uint160,uint128)",
          "getAmount0DeltaSignedInvariants(uint160,uint160,int128)",
          "getAmount1DeltaSignedInvariants(uint160,uint160,int128)",
          "getOutOfRangeMintInvariants(uint160,uint160,int128)",
          "getInRangeMintInvariants(uint160,uint160,uint160,int128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SqrtPriceMathTest.sol:SqrtPriceMathTest": {
        "src": "contracts/test/SqrtPriceMathTest.sol:6",
        "version": {
          "withMetadata": "a3d5b4f26fd7ca21ceed81ccb43a2cb8927108c224da710021c42c53b11928b1",
          "withoutMetadata": "c33cb95cebbcb2c700c07aa26856f0a5197b4a4d585b7e02e54275921d9d6374",
          "linkedWithoutMetadata": "c33cb95cebbcb2c700c07aa26856f0a5197b4a4d585b7e02e54275921d9d6374"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath"
        ],
        "methods": [
          "getNextSqrtPriceFromInput(uint160,uint128,uint256,bool)",
          "getGasCostOfGetNextSqrtPriceFromInput(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromOutput(uint160,uint128,uint256,bool)",
          "getGasCostOfGetNextSqrtPriceFromOutput(uint160,uint128,uint256,bool)",
          "getAmount0Delta(uint160,uint160,uint128,bool)",
          "getAmount1Delta(uint160,uint160,uint128,bool)",
          "getGasCostOfGetAmount0Delta(uint160,uint160,uint128,bool)",
          "getGasCostOfGetAmount1Delta(uint160,uint160,uint128,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SwapMathEchidnaTest.sol:SwapMathEchidnaTest": {
        "src": "contracts/test/SwapMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "e6e3394834a4b71deb5a1e9195287fc101a5975363f2a33d05a5b5029d498beb",
          "withoutMetadata": "ad13ccfe06480aa373b1ffcb9125c3316e45d77e6eb84d33e914bc2718ac9afb",
          "linkedWithoutMetadata": "ad13ccfe06480aa373b1ffcb9125c3316e45d77e6eb84d33e914bc2718ac9afb"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SwapMath.sol:SwapMath"
        ],
        "methods": [
          "checkComputeSwapStepInvariants(uint160,uint160,uint128,int256,uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SwapMathTest.sol:SwapMathTest": {
        "src": "contracts/test/SwapMathTest.sol:6",
        "version": {
          "withMetadata": "2ac62bea90e1d43abad4ce60d68c00114e2c80d120981bd46b3b2add5ebc8272",
          "withoutMetadata": "195d496be7a789b235a468adca519221bad02ca3b1297bb960929c9c703ae507",
          "linkedWithoutMetadata": "195d496be7a789b235a468adca519221bad02ca3b1297bb960929c9c703ae507"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SwapMath.sol:SwapMath"
        ],
        "methods": [
          "computeSwapStep(uint160,uint160,uint128,int256,uint24)",
          "getGasCostOfComputeSwapStep(uint160,uint160,uint128,int256,uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestERC20.sol:TestERC20": {
        "src": "contracts/test/TestERC20.sol:6",
        "version": {
          "withMetadata": "9a4335a4687a54ebd8d1815c8e51c573346b000d079a6ad320de0e682e115fd3",
          "withoutMetadata": "938bb3da8233538f8e6380ed297c6c043cf3c727ad41e95c7e4f997cc88a0972",
          "linkedWithoutMetadata": "938bb3da8233538f8e6380ed297c6c043cf3c727ad41e95c7e4f997cc88a0972"
        },
        "inherit": [
          "contracts/interfaces/IERC20Minimal.sol:IERC20Minimal"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TestERC20",
            "src": "contracts/test/TestERC20.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TestERC20",
              "src": "contracts/test/TestERC20.sol:7"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TestERC20",
              "src": "contracts/test/TestERC20.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3Callee.sol:TestUniswapV3Callee": {
        "src": "contracts/test/TestUniswapV3Callee.sol:15",
        "version": {
          "withMetadata": "fee3888682d989cc97fe7b77d56f7e5b5f28f1bb44e9a5e16c31a4809b4c7934",
          "withoutMetadata": "4dd430c74c933c2c5db0ff27afed45deec73ef59c15d8100970c73f2a34a58eb",
          "linkedWithoutMetadata": "4dd430c74c933c2c5db0ff27afed45deec73ef59c15d8100970c73f2a34a58eb"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3FlashCallback.sol:IUniswapV3FlashCallback",
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback",
          "contracts/interfaces/callback/IUniswapV3MintCallback.sol:IUniswapV3MintCallback"
        ],
        "libraries": [
          "contracts/libraries/SafeCast.sol:SafeCast"
        ],
        "methods": [
          "swapExact0For1(address,uint256,address,uint160)",
          "swap0ForExact1(address,uint256,address,uint160)",
          "swapExact1For0(address,uint256,address,uint160)",
          "swap1ForExact0(address,uint256,address,uint160)",
          "swapToLowerSqrtPrice(address,uint160,address)",
          "swapToHigherSqrtPrice(address,uint160,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)",
          "mint(address,address,int24,int24,uint128)",
          "uniswapV3MintCallback(uint256,uint256,bytes)",
          "flash(address,address,uint256,uint256,uint256,uint256)",
          "uniswapV3FlashCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3ReentrantCallee.sol:TestUniswapV3ReentrantCallee": {
        "src": "contracts/test/TestUniswapV3ReentrantCallee.sol:10",
        "version": {
          "withMetadata": "62f9a039922ebe6d880a00598da628e52e0804bcfbc958e593ed2390a4529b93",
          "withoutMetadata": "d096265f890e259eb446d24fbc8c474be5ebba983b14526947c62281c71a424b",
          "linkedWithoutMetadata": "d096265f890e259eb446d24fbc8c474be5ebba983b14526947c62281c71a424b"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "swapToReenter(address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3Router.sol:TestUniswapV3Router": {
        "src": "contracts/test/TestUniswapV3Router.sol:11",
        "version": {
          "withMetadata": "2171266064faf7576996e444602a4ab7202303e0431c1c6ab06ca7c0b8f0c501",
          "withoutMetadata": "7036f94949d44ad0947e3571d65cb0ad9edca55c4caa01b01684404d13009ca9",
          "linkedWithoutMetadata": "7036f94949d44ad0947e3571d65cb0ad9edca55c4caa01b01684404d13009ca9"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "swapForExact0Multi(address,address,address,uint256)",
          "swapForExact1Multi(address,address,address,uint256)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3SwapPay.sol:TestUniswapV3SwapPay": {
        "src": "contracts/test/TestUniswapV3SwapPay.sol:9",
        "version": {
          "withMetadata": "259d87f6effd97374773ba501fb185beb62c764d0f1e1174a7f49078d5e048de",
          "withoutMetadata": "885c1364b78717b9c9bf0c5008b2ce72eded24ba2bb56dc0da85e69282d006e3",
          "linkedWithoutMetadata": "885c1364b78717b9c9bf0c5008b2ce72eded24ba2bb56dc0da85e69282d006e3"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "swap(address,address,bool,uint160,int256,uint256,uint256)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickBitmapEchidnaTest.sol:TickBitmapEchidnaTest": {
        "src": "contracts/test/TickBitmapEchidnaTest.sol:6",
        "version": {
          "withMetadata": "036418df22a6f92d72215afc7027da7a0069bd7c258b13630e63e06bf6adc091",
          "withoutMetadata": "aa3219a23f7644ada604e18bad98c36e1dc766d05af2976e73e146f1e9ec0b79",
          "linkedWithoutMetadata": "aa3219a23f7644ada604e18bad98c36e1dc766d05af2976e73e146f1e9ec0b79"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickBitmap.sol:TickBitmap"
        ],
        "methods": [
          "flipTick(int24)",
          "checkNextInitializedTickWithinOneWordInvariants(int24,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bitmap",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "TickBitmapEchidnaTest",
              "src": "contracts/test/TickBitmapEchidnaTest.sol:9"
            }
          ],
          "types": {
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickBitmapTest.sol:TickBitmapTest": {
        "src": "contracts/test/TickBitmapTest.sol:6",
        "version": {
          "withMetadata": "d4dc09b819074bedc39cfc382ed0e8fe44844515737c9d843f455c9487f1ec41",
          "withoutMetadata": "e1f3596aca8b8d0677f0e709f3e4120b5e295910f3211b12bcb2058fd0a8acdb",
          "linkedWithoutMetadata": "e1f3596aca8b8d0677f0e709f3e4120b5e295910f3211b12bcb2058fd0a8acdb"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickBitmap.sol:TickBitmap"
        ],
        "methods": [
          "flipTick(int24)",
          "getGasCostOfFlipTick(int24)",
          "nextInitializedTickWithinOneWord(int24,bool)",
          "getGasCostOfNextInitializedTickWithinOneWord(int24,bool)",
          "isInitialized(int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bitmap",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "TickBitmapTest",
              "src": "contracts/test/TickBitmapTest.sol:9"
            }
          ],
          "types": {
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickEchidnaTest.sol:TickEchidnaTest": {
        "src": "contracts/test/TickEchidnaTest.sol:6",
        "version": {
          "withMetadata": "b241fd9039aba503df76f8b4f018630614d49fe9d499c713a9d23eb2bbe57601",
          "withoutMetadata": "e79be2ea72fef3ce3aee1b700a67c4c21c141b21c0a9195f9e26b6236b800c1e",
          "linkedWithoutMetadata": "e79be2ea72fef3ce3aee1b700a67c4c21c141b21c0a9195f9e26b6236b800c1e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/Tick.sol:Tick"
        ],
        "methods": [
          "checkTickSpacingToParametersInvariants(int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickMathEchidnaTest.sol:TickMathEchidnaTest": {
        "src": "contracts/test/TickMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "27061fb450323ea96fd6608ab0248cb19d07df54a869deb21295c5bde8643604",
          "withoutMetadata": "f235f1457599ad517cb0348be7e03d30920b49bcc561f132a6c4a0d4766f79b0",
          "linkedWithoutMetadata": "f235f1457599ad517cb0348be7e03d30920b49bcc561f132a6c4a0d4766f79b0"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "checkGetSqrtRatioAtTickInvariants(int24)",
          "checkGetTickAtSqrtRatioInvariants(uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickMathTest.sol:TickMathTest": {
        "src": "contracts/test/TickMathTest.sol:6",
        "version": {
          "withMetadata": "64f274bd276654a648b35490c72470f8026d0eebdb92b53980b85b346754ff07",
          "withoutMetadata": "561d3d32afba60a42d81ef4914ef98a403e503cfe10acdc327f35c2ec3b54f1b",
          "linkedWithoutMetadata": "561d3d32afba60a42d81ef4914ef98a403e503cfe10acdc327f35c2ec3b54f1b"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "getSqrtRatioAtTick(int24)",
          "getGasCostOfGetSqrtRatioAtTick(int24)",
          "getTickAtSqrtRatio(uint160)",
          "getGasCostOfGetTickAtSqrtRatio(uint160)",
          "MIN_SQRT_RATIO()",
          "MAX_SQRT_RATIO()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickOverflowSafetyEchidnaTest.sol:TickOverflowSafetyEchidnaTest": {
        "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:6",
        "version": {
          "withMetadata": "58a7e18bac471e530d26a2a3551cce196a97fd507513dbdf5aacea7b82aedfad",
          "withoutMetadata": "dd9d1c6af174aa4fa6789fe30db5a52321576a17e678811406d8b01e0efbeeb7",
          "linkedWithoutMetadata": "dd9d1c6af174aa4fa6789fe30db5a52321576a17e678811406d8b01e0efbeeb7"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Tick.sol:Tick"
        ],
        "methods": [
          "increaseFeeGrowthGlobal0X128(uint256)",
          "increaseFeeGrowthGlobal1X128(uint256)",
          "setPosition(int24,int24,int128)",
          "moveToTick(int24)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "tick",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalLiquidity",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeGrowthGlobal0X128",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeGrowthGlobal1X128",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalGrowth0",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalGrowth1",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ticks",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:13"
            },
            {
              "label": "tick",
              "offset": 0,
              "slot": "1",
              "type": "t_int24",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:14"
            },
            {
              "label": "totalLiquidity",
              "offset": 0,
              "slot": "2",
              "type": "t_int256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:17"
            },
            {
              "label": "feeGrowthGlobal0X128",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:19"
            },
            {
              "label": "feeGrowthGlobal1X128",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:20"
            },
            {
              "label": "totalGrowth0",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:22"
            },
            {
              "label": "totalGrowth1",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:23"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickTest.sol:TickTest": {
        "src": "contracts/test/TickTest.sol:7",
        "version": {
          "withMetadata": "9a4bbaf9f25a6592785a785b6547f83b0c0118dda233cea966628137e3fe6d0a",
          "withoutMetadata": "3cff600d6511f8fa3bd1b01f58cfb5eea574a904456c09ede24e81879141e156",
          "linkedWithoutMetadata": "3cff600d6511f8fa3bd1b01f58cfb5eea574a904456c09ede24e81879141e156"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Tick.sol:Tick"
        ],
        "methods": [
          "tickSpacingToMaxLiquidityPerTick(int24)",
          "setTick(int24,(uint128,int128,uint256,uint256,int56,uint160,uint32,bool))",
          "getFeeGrowthInside(int24,int24,int24,uint256,uint256)",
          "update(int24,int24,int128,uint256,uint256,uint160,int56,uint32,bool,uint128)",
          "clear(int24)",
          "cross(int24,uint256,uint256,uint160,int56,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "ticks",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "TickTest",
              "src": "contracts/test/TickTest.sol:10"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/UniswapV3PoolSwapTest.sol:UniswapV3PoolSwapTest": {
        "src": "contracts/test/UniswapV3PoolSwapTest.sol:9",
        "version": {
          "withMetadata": "f49f473ddbe1850a633d6960f53673a387b1327c067fc2538e54833e692b3ef0",
          "withoutMetadata": "03a9c8e38501df5ad2bfdde15a8a5e21c892c98a6633fd3b36021fdd23ec0260",
          "linkedWithoutMetadata": "03a9c8e38501df5ad2bfdde15a8a5e21c892c98a6633fd3b36021fdd23ec0260"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "getSwapResult(address,bool,int256,uint160)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_amount0Delta",
              "offset": 0,
              "slot": "0",
              "type": "t_int256",
              "contract": "UniswapV3PoolSwapTest",
              "src": "contracts/test/UniswapV3PoolSwapTest.sol:10"
            },
            {
              "label": "_amount1Delta",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UniswapV3PoolSwapTest",
              "src": "contracts/test/UniswapV3PoolSwapTest.sol:11"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/UnsafeMathEchidnaTest.sol:UnsafeMathEchidnaTest": {
        "src": "contracts/test/UnsafeMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "00cbdc1d2dee0acd573b5ce9b4e83f24579b9166deea8cbf628fddf24ea3bfa4",
          "withoutMetadata": "6111038855a82b46238fa4ca38d0c27948d9433d99b623e4b3054609f1a44745",
          "linkedWithoutMetadata": "6111038855a82b46238fa4ca38d0c27948d9433d99b623e4b3054609f1a44745"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/UnsafeMath.sol:UnsafeMath"
        ],
        "methods": [
          "checkDivRoundingUp(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "contracts/NoDelegateCall.sol:NoDelegateCall": {
        "src": "contracts/NoDelegateCall.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NoDelegateCall",
            "src": "contracts/NoDelegateCall.sol:10"
          },
          {
            "kind": "state-variable-immutable",
            "name": "original",
            "src": "contracts/NoDelegateCall.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/UniswapV3Factory.sol:UniswapV3Factory": {
        "src": "contracts/UniswapV3Factory.sol:13",
        "version": {
          "withMetadata": "cc90fcf40bb186475d46e80dbcb507c4855bff7a1ee51366bc52e665987f4641",
          "withoutMetadata": "cc90fcf40bb186475d46e80dbcb507c4855bff7a1ee51366bc52e665987f4641",
          "linkedWithoutMetadata": "cc90fcf40bb186475d46e80dbcb507c4855bff7a1ee51366bc52e665987f4641"
        },
        "inherit": [
          "contracts/NoDelegateCall.sol:NoDelegateCall",
          "contracts/UniswapV3PoolDeployer.sol:UniswapV3PoolDeployer",
          "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer",
          "contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapV3Factory",
            "src": "contracts/UniswapV3Factory.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parameters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Parameters)2811_storage",
              "contract": "UniswapV3PoolDeployer",
              "src": "contracts/UniswapV3PoolDeployer.sol:18"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "UniswapV3Factory",
              "src": "contracts/UniswapV3Factory.sol:15"
            },
            {
              "label": "feeAmountTickSpacing",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint24,t_int24)",
              "contract": "UniswapV3Factory",
              "src": "contracts/UniswapV3Factory.sol:18"
            },
            {
              "label": "getPool",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint24,t_address)))",
              "contract": "UniswapV3Factory",
              "src": "contracts/UniswapV3Factory.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint24,t_address)))": {
              "label": "mapping(address => mapping(address => mapping(uint24 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
              "label": "mapping(address => mapping(uint24 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint24,t_address)": {
              "label": "mapping(uint24 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint24,t_int24)": {
              "label": "mapping(uint24 => int24)",
              "numberOfBytes": "32"
            },
            "t_struct(Parameters)2811_storage": {
              "label": "struct UniswapV3PoolDeployer.Parameters",
              "members": [
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "tickSpacing",
                  "type": "t_int24",
                  "offset": 23,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/UniswapV3Pool.sol:UniswapV3Pool": {
        "src": "contracts/UniswapV3Pool.sol:30",
        "version": {
          "withMetadata": "de18bdd5bef77bcc12cf1a04a1ec57919670067aa0c7de15e821beb5ed3d95c7",
          "withoutMetadata": "687e26e4da8f01ea372edc39a870d80f12f6352bf9aa89b3606a26034f3e4885",
          "linkedWithoutMetadata": "687e26e4da8f01ea372edc39a870d80f12f6352bf9aa89b3606a26034f3e4885"
        },
        "inherit": [
          "contracts/NoDelegateCall.sol:NoDelegateCall",
          "contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool",
          "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/Tick.sol:Tick",
          "contracts/libraries/TickBitmap.sol:TickBitmap",
          "contracts/libraries/Position.sol:Position",
          "contracts/libraries/Oracle.sol:Oracle",
          "contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath",
          "contracts/libraries/LiquidityMath.sol:LiquidityMath",
          "contracts/libraries/TransferHelper.sol:TransferHelper",
          "contracts/libraries/SwapMath.sol:SwapMath",
          "contracts/libraries/FixedPoint128.sol:FixedPoint128",
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [
          "()",
          "snapshotCumulativesInside(int24,int24)",
          "observe(uint32[])",
          "increaseObservationCardinalityNext(uint16)",
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapV3Pool",
            "src": "contracts/UniswapV3Pool.sol:117"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts/UniswapV3Pool.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token0",
            "src": "contracts/UniswapV3Pool.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token1",
            "src": "contracts/UniswapV3Pool.sol:46"
          },
          {
            "kind": "state-variable-immutable",
            "name": "fee",
            "src": "contracts/UniswapV3Pool.sol:48"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tickSpacing",
            "src": "contracts/UniswapV3Pool.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxLiquidityPerTick",
            "src": "contracts/UniswapV3Pool.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "slot0",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Slot0)415_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:74"
            },
            {
              "label": "feeGrowthGlobal0X128",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:77"
            },
            {
              "label": "feeGrowthGlobal1X128",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:79"
            },
            {
              "label": "protocolFees",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(ProtocolFees)432_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:87"
            },
            {
              "label": "liquidity",
              "offset": 0,
              "slot": "4",
              "type": "t_uint128",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:90"
            },
            {
              "label": "ticks",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:93"
            },
            {
              "label": "tickBitmap",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:95"
            },
            {
              "label": "positions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_struct(Info)4924_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:97"
            },
            {
              "label": "observations",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_struct(Observation)4184_storage)65535_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:99"
            }
          ],
          "types": {
            "t_array(t_struct(Observation)4184_storage)65535_storage": {
              "label": "struct Oracle.Observation[65535]",
              "numberOfBytes": "2097120"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_bytes32,t_struct(Info)4924_storage)": {
              "label": "mapping(bytes32 => struct Position.Info)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)4924_storage": {
              "label": "struct Position.Info",
              "members": [
                {
                  "label": "liquidity",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthInside0LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthInside1LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokensOwed0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "tokensOwed1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Observation)4184_storage": {
              "label": "struct Oracle.Observation",
              "members": [
                {
                  "label": "blockTimestamp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickCumulative",
                  "type": "t_int56",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "secondsPerLiquidityCumulativeX128",
                  "type": "t_uint160",
                  "offset": 11,
                  "slot": "0"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ProtocolFees)432_storage": {
              "label": "struct UniswapV3Pool.ProtocolFees",
              "members": [
                {
                  "label": "token0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Slot0)415_storage": {
              "label": "struct UniswapV3Pool.Slot0",
              "members": [
                {
                  "label": "sqrtPriceX96",
                  "type": "t_uint160",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tick",
                  "type": "t_int24",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "observationIndex",
                  "type": "t_uint16",
                  "offset": 23,
                  "slot": "0"
                },
                {
                  "label": "observationCardinality",
                  "type": "t_uint16",
                  "offset": 25,
                  "slot": "0"
                },
                {
                  "label": "observationCardinalityNext",
                  "type": "t_uint16",
                  "offset": 27,
                  "slot": "0"
                },
                {
                  "label": "feeProtocol",
                  "type": "t_uint8",
                  "offset": 29,
                  "slot": "0"
                },
                {
                  "label": "unlocked",
                  "type": "t_bool",
                  "offset": 30,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/UniswapV3PoolDeployer.sol:UniswapV3PoolDeployer": {
        "src": "contracts/UniswapV3PoolDeployer.sol:8",
        "version": {
          "withMetadata": "cff7a534bd17921a36b1e2a9084711027461e968d343f6bad6cf9b852ab33264",
          "withoutMetadata": "84a9cab36b941e3aedd10f518e73972eb6b5dcf62adec747c989c44f54f58aa4",
          "linkedWithoutMetadata": "84a9cab36b941e3aedd10f518e73972eb6b5dcf62adec747c989c44f54f58aa4"
        },
        "inherit": [
          "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "parameters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Parameters)2811_storage",
              "contract": "UniswapV3PoolDeployer",
              "src": "contracts/UniswapV3PoolDeployer.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_struct(Parameters)2811_storage": {
              "label": "struct UniswapV3PoolDeployer.Parameters",
              "members": [
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "tickSpacing",
                  "type": "t_int24",
                  "offset": 23,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IERC20Minimal.sol:IERC20Minimal": {
        "src": "contracts/interfaces/IERC20Minimal.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory": {
        "src": "contracts/interfaces/IUniswapV3Factory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer": {
        "src": "contracts/interfaces/IUniswapV3PoolDeployer.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "parameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/callback/IUniswapV3FlashCallback.sol:IUniswapV3FlashCallback": {
        "src": "contracts/interfaces/callback/IUniswapV3FlashCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3FlashCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/callback/IUniswapV3MintCallback.sol:IUniswapV3MintCallback": {
        "src": "contracts/interfaces/callback/IUniswapV3MintCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3MintCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/BitMath.sol:BitMath": {
        "src": "contracts/libraries/BitMath.sol:6",
        "version": {
          "withMetadata": "a2c1a521cb5b50a1fdcbdfbc1f4421da465377b32766c998a6c6ea6ff974b2f2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/FixedPoint128.sol:FixedPoint128": {
        "src": "contracts/libraries/FixedPoint128.sol:6",
        "version": {
          "withMetadata": "b7907502ab7b0e6e7d131f16dae61a8cfa1293da2a2a20e4d83dffc0fd319cee",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/FixedPoint96.sol:FixedPoint96": {
        "src": "contracts/libraries/FixedPoint96.sol:7",
        "version": {
          "withMetadata": "4f2d87417052d0f5e331d21feb3a0426220481c883ac774aa3e78866724a6869",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/FullMath.sol:FullMath": {
        "src": "contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "37844da6d7b063741e8c4e6e1166a7b520e1f33849653f23315f24231bf1fb61",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/LiquidityMath.sol:LiquidityMath": {
        "src": "contracts/libraries/LiquidityMath.sol:5",
        "version": {
          "withMetadata": "3cd55cceff5c3b16dacc1d968147aec5385f66778877b031d0ef547ab9611baa",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath": {
        "src": "contracts/libraries/LowGasSafeMath.sol:6",
        "version": {
          "withMetadata": "aae63942f6dd65e53a30eef24448b63d913407c6e883cd80ac645b3d4b81f2d7",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/Oracle.sol:Oracle": {
        "src": "contracts/libraries/Oracle.sol:11",
        "version": {
          "withMetadata": "f7b20919b5ec55af58ad3c0ec69bb2590dc736da52d99cadf63505d04a2c7826",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/Position.sol:Position": {
        "src": "contracts/libraries/Position.sol:11",
        "version": {
          "withMetadata": "ea3a2b015bd72b5e23b508c7d253b80b21d561948fd1be0ace917b24b5d191b5",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LiquidityMath.sol:LiquidityMath",
          "contracts/libraries/FixedPoint128.sol:FixedPoint128",
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/SafeCast.sol:SafeCast": {
        "src": "contracts/libraries/SafeCast.sol:6",
        "version": {
          "withMetadata": "86d53eb4778bea1d74f770fbfbb801e73c18b5866949be079f4345d166788b58",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath": {
        "src": "contracts/libraries/SqrtPriceMath.sol:13",
        "version": {
          "withMetadata": "d45e9f02e6b935bd0f268a2be12efbb3eeac2b1f139def0af08b14e13bb9e391",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/FixedPoint96.sol:FixedPoint96",
          "contracts/libraries/FullMath.sol:FullMath",
          "contracts/libraries/UnsafeMath.sol:UnsafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/SwapMath.sol:SwapMath": {
        "src": "contracts/libraries/SwapMath.sol:9",
        "version": {
          "withMetadata": "78456af3b3a7ae82c54453b7915657718e1b1cbfdb339c249b850bad81405b79",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath",
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/Tick.sol:Tick": {
        "src": "contracts/libraries/Tick.sol:12",
        "version": {
          "withMetadata": "34c413fa1db517fedabbcd85544b21a325b71e7c9906cbd30ec2d78692c6fd6e",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/LiquidityMath.sol:LiquidityMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TickBitmap.sol:TickBitmap": {
        "src": "contracts/libraries/TickBitmap.sol:9",
        "version": {
          "withMetadata": "c9b02a459d43b5c55f1152253dcb9f704f60417700455bd77d163282b9a35e85",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TickMath.sol:TickMath": {
        "src": "contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "db8d9db6e1a320ea0589e6c0574caba7809f067bef9d1c7f02cef93b9653e1b4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "contracts/libraries/TransferHelper.sol:8",
        "version": {
          "withMetadata": "35e1ebb91bfa1de6a140e9a2b37008d46d54533b1d95996bf6a0038d72b96c45",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/UnsafeMath.sol:UnsafeMath": {
        "src": "contracts/libraries/UnsafeMath.sol:6",
        "version": {
          "withMetadata": "a591d73d5801b5747f0a5d98839d4dd910ae2f1233a7c0160cf5d3a3f5ba3c11",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/BitMathEchidnaTest.sol:BitMathEchidnaTest": {
        "src": "contracts/test/BitMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "468c230474afdd5bae0f250f87dd6e0cec144d901a8e3794b07314494a74d4b5",
          "withoutMetadata": "acbd7ab01e144046dc11226bc443f7b77055c9778ce259671e32fa0e77b0e886",
          "linkedWithoutMetadata": "acbd7ab01e144046dc11226bc443f7b77055c9778ce259671e32fa0e77b0e886"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [
          "mostSignificantBitInvariant(uint256)",
          "leastSignificantBitInvariant(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/BitMathTest.sol:BitMathTest": {
        "src": "contracts/test/BitMathTest.sol:6",
        "version": {
          "withMetadata": "0287e6dbcda4f0c104095ce4a3187b89aedde83ad80371f265909975187d5388",
          "withoutMetadata": "760108482d34c3bae2c15b04577cf17c97bf78da07bf04064af715c49eb8aabd",
          "linkedWithoutMetadata": "760108482d34c3bae2c15b04577cf17c97bf78da07bf04064af715c49eb8aabd"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [
          "mostSignificantBit(uint256)",
          "getGasCostOfMostSignificantBit(uint256)",
          "leastSignificantBit(uint256)",
          "getGasCostOfLeastSignificantBit(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/FullMathEchidnaTest.sol:FullMathEchidnaTest": {
        "src": "contracts/test/FullMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "b4a8b71c4a5cb15550ecd1fe3fce80b06665b455c3f9577c9e99039e4a9acf17",
          "withoutMetadata": "a383590966b4c1cdb6aaee3dae33881d7716d4bd3b42ce2bd7e33d2016e3bed5",
          "linkedWithoutMetadata": "a383590966b4c1cdb6aaee3dae33881d7716d4bd3b42ce2bd7e33d2016e3bed5"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [
          "checkMulDivRounding(uint256,uint256,uint256)",
          "checkMulDiv(uint256,uint256,uint256)",
          "checkMulDivRoundingUp(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/FullMathTest.sol:FullMathTest": {
        "src": "contracts/test/FullMathTest.sol:6",
        "version": {
          "withMetadata": "4321e131d1ceb139bf889188b62d906630e888baa1476e924001da61f1084973",
          "withoutMetadata": "548dd903e5a2721a08b24eadc10f3c7350a5a077def3c6a42808289823e92648",
          "linkedWithoutMetadata": "548dd903e5a2721a08b24eadc10f3c7350a5a077def3c6a42808289823e92648"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [
          "mulDiv(uint256,uint256,uint256)",
          "mulDivRoundingUp(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/LiquidityMathTest.sol:LiquidityMathTest": {
        "src": "contracts/test/LiquidityMathTest.sol:6",
        "version": {
          "withMetadata": "7bc75c3a203344a922a6c8cb5824dd5728373008707a7a14b0ac0097f2b5f36b",
          "withoutMetadata": "cca8ef760d6aeab43b97e1ec5c2984f1e2a3f37401cc99e9f22d7a1fac11e37e",
          "linkedWithoutMetadata": "cca8ef760d6aeab43b97e1ec5c2984f1e2a3f37401cc99e9f22d7a1fac11e37e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LiquidityMath.sol:LiquidityMath"
        ],
        "methods": [
          "addDelta(uint128,int128)",
          "getGasCostOfAddDelta(uint128,int128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/LowGasSafeMathEchidnaTest.sol:LowGasSafeMathEchidnaTest": {
        "src": "contracts/test/LowGasSafeMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "587fb1bc72456b5b08faac111f507b425ec0af0b3803ba74bf40668bdb84c5fb",
          "withoutMetadata": "faba97e8f5f45abc18bfc1b54eeed71a923713d4a8b06e4864aba6df8656cb7e",
          "linkedWithoutMetadata": "faba97e8f5f45abc18bfc1b54eeed71a923713d4a8b06e4864aba6df8656cb7e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath"
        ],
        "methods": [
          "checkAdd(uint256,uint256)",
          "checkSub(uint256,uint256)",
          "checkMul(uint256,uint256)",
          "checkAddi(int256,int256)",
          "checkSubi(int256,int256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/MockTimeUniswapV3Pool.sol:MockTimeUniswapV3Pool": {
        "src": "contracts/test/MockTimeUniswapV3Pool.sol:7",
        "version": {
          "withMetadata": "a29f041e180b64ffe19355460cc9ac3a9578a8be0c19a62f4d1098ab18946c63",
          "withoutMetadata": "9781bb7219e1893dbf653322e6df8c7034aaf45636608cc7e1390fc3c691e196",
          "linkedWithoutMetadata": "9781bb7219e1893dbf653322e6df8c7034aaf45636608cc7e1390fc3c691e196"
        },
        "inherit": [
          "contracts/UniswapV3Pool.sol:UniswapV3Pool",
          "contracts/NoDelegateCall.sol:NoDelegateCall",
          "contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool",
          "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [
          "setFeeGrowthGlobal0X128(uint256)",
          "setFeeGrowthGlobal1X128(uint256)",
          "advanceTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "time",
            "src": "contracts/test/MockTimeUniswapV3Pool.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "slot0",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Slot0)415_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:74"
            },
            {
              "label": "feeGrowthGlobal0X128",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:77"
            },
            {
              "label": "feeGrowthGlobal1X128",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:79"
            },
            {
              "label": "protocolFees",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(ProtocolFees)432_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:87"
            },
            {
              "label": "liquidity",
              "offset": 0,
              "slot": "4",
              "type": "t_uint128",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:90"
            },
            {
              "label": "ticks",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:93"
            },
            {
              "label": "tickBitmap",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:95"
            },
            {
              "label": "positions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_struct(Info)4924_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:97"
            },
            {
              "label": "observations",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_struct(Observation)4184_storage)65535_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:99"
            },
            {
              "label": "time",
              "offset": 0,
              "slot": "65543",
              "type": "t_uint256",
              "contract": "MockTimeUniswapV3Pool",
              "src": "contracts/test/MockTimeUniswapV3Pool.sol:9"
            }
          ],
          "types": {
            "t_array(t_struct(Observation)4184_storage)65535_storage": {
              "label": "struct Oracle.Observation[65535]",
              "numberOfBytes": "2097120"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_bytes32,t_struct(Info)4924_storage)": {
              "label": "mapping(bytes32 => struct Position.Info)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)4924_storage": {
              "label": "struct Position.Info",
              "members": [
                {
                  "label": "liquidity",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthInside0LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthInside1LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokensOwed0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "tokensOwed1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Observation)4184_storage": {
              "label": "struct Oracle.Observation",
              "members": [
                {
                  "label": "blockTimestamp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickCumulative",
                  "type": "t_int56",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "secondsPerLiquidityCumulativeX128",
                  "type": "t_uint160",
                  "offset": 11,
                  "slot": "0"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ProtocolFees)432_storage": {
              "label": "struct UniswapV3Pool.ProtocolFees",
              "members": [
                {
                  "label": "token0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Slot0)415_storage": {
              "label": "struct UniswapV3Pool.Slot0",
              "members": [
                {
                  "label": "sqrtPriceX96",
                  "type": "t_uint160",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tick",
                  "type": "t_int24",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "observationIndex",
                  "type": "t_uint16",
                  "offset": 23,
                  "slot": "0"
                },
                {
                  "label": "observationCardinality",
                  "type": "t_uint16",
                  "offset": 25,
                  "slot": "0"
                },
                {
                  "label": "observationCardinalityNext",
                  "type": "t_uint16",
                  "offset": 27,
                  "slot": "0"
                },
                {
                  "label": "feeProtocol",
                  "type": "t_uint8",
                  "offset": 29,
                  "slot": "0"
                },
                {
                  "label": "unlocked",
                  "type": "t_bool",
                  "offset": 30,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/MockTimeUniswapV3PoolDeployer.sol:MockTimeUniswapV3PoolDeployer": {
        "src": "contracts/test/MockTimeUniswapV3PoolDeployer.sol:8",
        "version": {
          "withMetadata": "ecc68220040caff37866b56a18bfb69a731811d4723144469b966d3333e8fabe",
          "withoutMetadata": "f5b52e1b64d9beead84bd442087500b33a0e36f503cf5ed754603bfc757ddc27",
          "linkedWithoutMetadata": "f5b52e1b64d9beead84bd442087500b33a0e36f503cf5ed754603bfc757ddc27"
        },
        "inherit": [
          "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer"
        ],
        "libraries": [],
        "methods": [
          "deploy(address,address,address,uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "parameters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Parameters)7983_storage",
              "contract": "MockTimeUniswapV3PoolDeployer",
              "src": "contracts/test/MockTimeUniswapV3PoolDeployer.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_struct(Parameters)7983_storage": {
              "label": "struct MockTimeUniswapV3PoolDeployer.Parameters",
              "members": [
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "tickSpacing",
                  "type": "t_int24",
                  "offset": 23,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/NoDelegateCallTest.sol:NoDelegateCallTest": {
        "src": "contracts/test/NoDelegateCallTest.sol:6",
        "version": {
          "withMetadata": "fb0bab7923cf7c2b352c7a371c0b52ed3c94572607142376b6dffa1eee5c4808",
          "withoutMetadata": "f6986b5861202c2c75821dd3fac18c071e081dc4cb110719a4ad75fb35e587b1",
          "linkedWithoutMetadata": "f6986b5861202c2c75821dd3fac18c071e081dc4cb110719a4ad75fb35e587b1"
        },
        "inherit": [
          "contracts/NoDelegateCall.sol:NoDelegateCall"
        ],
        "libraries": [],
        "methods": [
          "canBeDelegateCalled()",
          "cannotBeDelegateCalled()",
          "getGasCostOfCanBeDelegateCalled()",
          "getGasCostOfCannotBeDelegateCalled()",
          "callsIntoNoDelegateCallFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/OracleEchidnaTest.sol:OracleEchidnaTest": {
        "src": "contracts/test/OracleEchidnaTest.sol:7",
        "version": {
          "withMetadata": "0ec97b3eaa70a4a124647dc8a9c1f9b7339f930759f554def12802a22270e7de",
          "withoutMetadata": "4111b2351006c6eb451c38b90b4722087d801f8eba43de396f35419deae6c134",
          "linkedWithoutMetadata": "4111b2351006c6eb451c38b90b4722087d801f8eba43de396f35419deae6c134"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "initialize(uint32,int24,uint128)",
          "advanceTime(uint32)",
          "update(uint32,int24,uint128)",
          "grow(uint16)",
          "echidna_indexAlwaysLtCardinality()",
          "echidna_AlwaysInitialized()",
          "echidna_cardinalityAlwaysLteNext()",
          "echidna_canAlwaysObserve0IfInitialized()",
          "checkTwoAdjacentObservationsTickCumulativeModTimeElapsedAlways0(uint16)",
          "checkTimeWeightedAveragesAlwaysFitsType(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleEchidnaTest",
            "src": "contracts/test/OracleEchidnaTest.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(OracleTest)9021",
              "contract": "OracleEchidnaTest",
              "src": "contracts/test/OracleEchidnaTest.sol:8"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "OracleEchidnaTest",
              "src": "contracts/test/OracleEchidnaTest.sol:10"
            },
            {
              "label": "timePassed",
              "offset": 21,
              "slot": "0",
              "type": "t_uint32",
              "contract": "OracleEchidnaTest",
              "src": "contracts/test/OracleEchidnaTest.sol:11"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(OracleTest)9021": {
              "label": "contract OracleTest",
              "numberOfBytes": "20"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/OracleTest.sol:OracleTest": {
        "src": "contracts/test/OracleTest.sol:7",
        "version": {
          "withMetadata": "e71be842cc5f1a3be05a9004051e3a9b4c6ba32e667d431cb109489d44050382",
          "withoutMetadata": "ddbd258d8cdfb7a2d867b73d8ec24665a87429ea15f6206c3e49a753c5cb1fe8",
          "linkedWithoutMetadata": "ddbd258d8cdfb7a2d867b73d8ec24665a87429ea15f6206c3e49a753c5cb1fe8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Oracle.sol:Oracle"
        ],
        "methods": [
          "initialize((uint32,int24,uint128))",
          "advanceTime(uint32)",
          "update((uint32,int24,uint128))",
          "batchUpdate(struct OracleTest.UpdateParams[])",
          "grow(uint16)",
          "observe(uint32[])",
          "getGasCostOfObserve(uint32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "observations",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(Observation)4184_storage)65535_storage",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:10"
            },
            {
              "label": "time",
              "offset": 0,
              "slot": "65535",
              "type": "t_uint32",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:12"
            },
            {
              "label": "tick",
              "offset": 4,
              "slot": "65535",
              "type": "t_int24",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:13"
            },
            {
              "label": "liquidity",
              "offset": 7,
              "slot": "65535",
              "type": "t_uint128",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:14"
            },
            {
              "label": "index",
              "offset": 23,
              "slot": "65535",
              "type": "t_uint16",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:15"
            },
            {
              "label": "cardinality",
              "offset": 25,
              "slot": "65535",
              "type": "t_uint16",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:16"
            },
            {
              "label": "cardinalityNext",
              "offset": 27,
              "slot": "65535",
              "type": "t_uint16",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:17"
            }
          ],
          "types": {
            "t_array(t_struct(Observation)4184_storage)65535_storage": {
              "label": "struct Oracle.Observation[65535]",
              "numberOfBytes": "2097120"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_struct(Observation)4184_storage": {
              "label": "struct Oracle.Observation",
              "members": [
                {
                  "label": "blockTimestamp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickCumulative",
                  "type": "t_int56",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "secondsPerLiquidityCumulativeX128",
                  "type": "t_uint160",
                  "offset": 11,
                  "slot": "0"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SqrtPriceMathEchidnaTest.sol:SqrtPriceMathEchidnaTest": {
        "src": "contracts/test/SqrtPriceMathEchidnaTest.sol:8",
        "version": {
          "withMetadata": "cd5543900d982db794250e3e45ecfbc7571e4396c7336fc97ec42ade9803b484",
          "withoutMetadata": "8a20dce8d31ef81c47b894e5838ff62387e282b09cba7cfc1dc03300d64fb45e",
          "linkedWithoutMetadata": "8a20dce8d31ef81c47b894e5838ff62387e282b09cba7cfc1dc03300d64fb45e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/FullMath.sol:FullMath",
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath",
          "contracts/libraries/FixedPoint96.sol:FixedPoint96"
        ],
        "methods": [
          "mulDivRoundingUpInvariants(uint256,uint256,uint256)",
          "getNextSqrtPriceFromInputInvariants(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromOutputInvariants(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromAmount0RoundingUpInvariants(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromAmount1RoundingDownInvariants(uint160,uint128,uint256,bool)",
          "getAmount0DeltaInvariants(uint160,uint160,uint128)",
          "getAmount0DeltaEquivalency(uint160,uint160,uint128,bool)",
          "getAmount1DeltaInvariants(uint160,uint160,uint128)",
          "getAmount0DeltaSignedInvariants(uint160,uint160,int128)",
          "getAmount1DeltaSignedInvariants(uint160,uint160,int128)",
          "getOutOfRangeMintInvariants(uint160,uint160,int128)",
          "getInRangeMintInvariants(uint160,uint160,uint160,int128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SqrtPriceMathTest.sol:SqrtPriceMathTest": {
        "src": "contracts/test/SqrtPriceMathTest.sol:6",
        "version": {
          "withMetadata": "28922169e3157d6558462ee4ffabebb2c1f7190e7785feffb88fb420cdea3a7a",
          "withoutMetadata": "92e484ef5f2120461b9f6e4f325a9f4fc9d2253f8f85dbe86f8ef4fa23b8c490",
          "linkedWithoutMetadata": "92e484ef5f2120461b9f6e4f325a9f4fc9d2253f8f85dbe86f8ef4fa23b8c490"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath"
        ],
        "methods": [
          "getNextSqrtPriceFromInput(uint160,uint128,uint256,bool)",
          "getGasCostOfGetNextSqrtPriceFromInput(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromOutput(uint160,uint128,uint256,bool)",
          "getGasCostOfGetNextSqrtPriceFromOutput(uint160,uint128,uint256,bool)",
          "getAmount0Delta(uint160,uint160,uint128,bool)",
          "getAmount1Delta(uint160,uint160,uint128,bool)",
          "getGasCostOfGetAmount0Delta(uint160,uint160,uint128,bool)",
          "getGasCostOfGetAmount1Delta(uint160,uint160,uint128,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SwapMathEchidnaTest.sol:SwapMathEchidnaTest": {
        "src": "contracts/test/SwapMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "bb336e9d9041051c770ca6a825e0e1e6278ba9b06a13d382e383c539095d3833",
          "withoutMetadata": "385cc894d313098f0efb500688429eecc59951e44d30ac4707c80cdb4ccdd435",
          "linkedWithoutMetadata": "385cc894d313098f0efb500688429eecc59951e44d30ac4707c80cdb4ccdd435"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SwapMath.sol:SwapMath"
        ],
        "methods": [
          "checkComputeSwapStepInvariants(uint160,uint160,uint128,int256,uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SwapMathTest.sol:SwapMathTest": {
        "src": "contracts/test/SwapMathTest.sol:6",
        "version": {
          "withMetadata": "190f91083525fd4a20fe9014fcd830ae1b9b3e8e4daa6f43035bb7f429e34478",
          "withoutMetadata": "f757a9d4af042c53685a3d91965d335b14e9757877f4b147f274ca062e376922",
          "linkedWithoutMetadata": "f757a9d4af042c53685a3d91965d335b14e9757877f4b147f274ca062e376922"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SwapMath.sol:SwapMath"
        ],
        "methods": [
          "computeSwapStep(uint160,uint160,uint128,int256,uint24)",
          "getGasCostOfComputeSwapStep(uint160,uint160,uint128,int256,uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestERC20.sol:TestERC20": {
        "src": "contracts/test/TestERC20.sol:6",
        "version": {
          "withMetadata": "ec21259558051d03b4871982f46a01238877403e1d046d38f7b85640a955e0a0",
          "withoutMetadata": "8bf7e5635d769ba4cd33d8a8f50985318c408761758512590d81877c4c337d40",
          "linkedWithoutMetadata": "8bf7e5635d769ba4cd33d8a8f50985318c408761758512590d81877c4c337d40"
        },
        "inherit": [
          "contracts/interfaces/IERC20Minimal.sol:IERC20Minimal"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TestERC20",
            "src": "contracts/test/TestERC20.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TestERC20",
              "src": "contracts/test/TestERC20.sol:7"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TestERC20",
              "src": "contracts/test/TestERC20.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3Callee.sol:TestUniswapV3Callee": {
        "src": "contracts/test/TestUniswapV3Callee.sol:15",
        "version": {
          "withMetadata": "1284e9912ae9a39232e8d44f1a8c0467da20280eedd239234bf5c8cff6597c0c",
          "withoutMetadata": "674fe9d39acb693543d58dc1e9767f9d26c0cbd551c7674842267b31c48888ab",
          "linkedWithoutMetadata": "674fe9d39acb693543d58dc1e9767f9d26c0cbd551c7674842267b31c48888ab"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3FlashCallback.sol:IUniswapV3FlashCallback",
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback",
          "contracts/interfaces/callback/IUniswapV3MintCallback.sol:IUniswapV3MintCallback"
        ],
        "libraries": [
          "contracts/libraries/SafeCast.sol:SafeCast"
        ],
        "methods": [
          "swapExact0For1(address,uint256,address,uint160)",
          "swap0ForExact1(address,uint256,address,uint160)",
          "swapExact1For0(address,uint256,address,uint160)",
          "swap1ForExact0(address,uint256,address,uint160)",
          "swapToLowerSqrtPrice(address,uint160,address)",
          "swapToHigherSqrtPrice(address,uint160,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)",
          "mint(address,address,int24,int24,uint128)",
          "uniswapV3MintCallback(uint256,uint256,bytes)",
          "flash(address,address,uint256,uint256,uint256,uint256)",
          "uniswapV3FlashCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3ReentrantCallee.sol:TestUniswapV3ReentrantCallee": {
        "src": "contracts/test/TestUniswapV3ReentrantCallee.sol:10",
        "version": {
          "withMetadata": "ad1ac7bafddc9b5337fa39e2e92dd6a424c326e4677ec6db1e5245cee7cfbe3f",
          "withoutMetadata": "9ece448509018a3a6bf1133ed9b0400ff05d27ef2842528120c410e693199d93",
          "linkedWithoutMetadata": "9ece448509018a3a6bf1133ed9b0400ff05d27ef2842528120c410e693199d93"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "swapToReenter(address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3Router.sol:TestUniswapV3Router": {
        "src": "contracts/test/TestUniswapV3Router.sol:11",
        "version": {
          "withMetadata": "4897b480f1464b2b4c4e6bd9ec30b465765a585109d59cfe14b5edbe6851c519",
          "withoutMetadata": "ff303de856962da1b08f1fcd8ab1579f58eb2e6b622f20dcd385a13b3b005756",
          "linkedWithoutMetadata": "ff303de856962da1b08f1fcd8ab1579f58eb2e6b622f20dcd385a13b3b005756"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "swapForExact0Multi(address,address,address,uint256)",
          "swapForExact1Multi(address,address,address,uint256)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3SwapPay.sol:TestUniswapV3SwapPay": {
        "src": "contracts/test/TestUniswapV3SwapPay.sol:9",
        "version": {
          "withMetadata": "d3fa17fd286fc72fd52cc63945e9b7b0a00dd142a3656d4e509b8062ceb94ea0",
          "withoutMetadata": "ed07bcb0bfd2a49b3a07a922554976d190512b6fd436a348cec905a2fc3b32db",
          "linkedWithoutMetadata": "ed07bcb0bfd2a49b3a07a922554976d190512b6fd436a348cec905a2fc3b32db"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "swap(address,address,bool,uint160,int256,uint256,uint256)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickBitmapEchidnaTest.sol:TickBitmapEchidnaTest": {
        "src": "contracts/test/TickBitmapEchidnaTest.sol:6",
        "version": {
          "withMetadata": "c85d82694603aee941282c49c6d4bf0675b868198638c6fa78b88640f9237bc7",
          "withoutMetadata": "a31b6ba825eaba8ddee63851cd06ce8ae77b66f05f489a6f00e93837e1a55ce3",
          "linkedWithoutMetadata": "a31b6ba825eaba8ddee63851cd06ce8ae77b66f05f489a6f00e93837e1a55ce3"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickBitmap.sol:TickBitmap"
        ],
        "methods": [
          "flipTick(int24)",
          "checkNextInitializedTickWithinOneWordInvariants(int24,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bitmap",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "TickBitmapEchidnaTest",
              "src": "contracts/test/TickBitmapEchidnaTest.sol:9"
            }
          ],
          "types": {
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickBitmapTest.sol:TickBitmapTest": {
        "src": "contracts/test/TickBitmapTest.sol:6",
        "version": {
          "withMetadata": "83d2458ddc15174bf8ce038b9f9e5da59784654ce2f6f5cf672abb666d02bb7b",
          "withoutMetadata": "be63fb8b21abd82f38d1c29c63630caaf91de99da390ee24fb33956e02db96f9",
          "linkedWithoutMetadata": "be63fb8b21abd82f38d1c29c63630caaf91de99da390ee24fb33956e02db96f9"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickBitmap.sol:TickBitmap"
        ],
        "methods": [
          "flipTick(int24)",
          "getGasCostOfFlipTick(int24)",
          "nextInitializedTickWithinOneWord(int24,bool)",
          "getGasCostOfNextInitializedTickWithinOneWord(int24,bool)",
          "isInitialized(int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bitmap",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "TickBitmapTest",
              "src": "contracts/test/TickBitmapTest.sol:9"
            }
          ],
          "types": {
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickEchidnaTest.sol:TickEchidnaTest": {
        "src": "contracts/test/TickEchidnaTest.sol:6",
        "version": {
          "withMetadata": "2280aea1506f8c270b73c5cb965ae6cbced8053fbaf1d2b3d99de7b845498035",
          "withoutMetadata": "94fc5579b9e54eef0d049aa8f845eaace13b7ebe665d64d4abad8959a052cc17",
          "linkedWithoutMetadata": "94fc5579b9e54eef0d049aa8f845eaace13b7ebe665d64d4abad8959a052cc17"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/Tick.sol:Tick"
        ],
        "methods": [
          "checkTickSpacingToParametersInvariants(int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickMathEchidnaTest.sol:TickMathEchidnaTest": {
        "src": "contracts/test/TickMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "ebd784f253c34ce0e059ed444d5d4971ad029899bf4eef0f15f5a52bb9c3ecd1",
          "withoutMetadata": "d049a5706d9712fdf4d8499f35e45ff2e8a73f1449632a3ad35b253472689b34",
          "linkedWithoutMetadata": "d049a5706d9712fdf4d8499f35e45ff2e8a73f1449632a3ad35b253472689b34"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "checkGetSqrtRatioAtTickInvariants(int24)",
          "checkGetTickAtSqrtRatioInvariants(uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickMathTest.sol:TickMathTest": {
        "src": "contracts/test/TickMathTest.sol:6",
        "version": {
          "withMetadata": "5fd5f56d524a6302ec794d73631a489cc469def65a06996e4b73b416350d1194",
          "withoutMetadata": "d5f4699454cdb9a6dbbfe68dd2437ef65ecf95ae978bdcfb0487bb29391f504e",
          "linkedWithoutMetadata": "d5f4699454cdb9a6dbbfe68dd2437ef65ecf95ae978bdcfb0487bb29391f504e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "getSqrtRatioAtTick(int24)",
          "getGasCostOfGetSqrtRatioAtTick(int24)",
          "getTickAtSqrtRatio(uint160)",
          "getGasCostOfGetTickAtSqrtRatio(uint160)",
          "MIN_SQRT_RATIO()",
          "MAX_SQRT_RATIO()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickOverflowSafetyEchidnaTest.sol:TickOverflowSafetyEchidnaTest": {
        "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:6",
        "version": {
          "withMetadata": "99b8ce1d130cb98aa1efe5c4a8129aef45312fbcd2aed26468688ebaa18f13cd",
          "withoutMetadata": "becdf086516c635593c80c348cfb38e82bffbf43373778c65bfe09319591ab7a",
          "linkedWithoutMetadata": "becdf086516c635593c80c348cfb38e82bffbf43373778c65bfe09319591ab7a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Tick.sol:Tick"
        ],
        "methods": [
          "increaseFeeGrowthGlobal0X128(uint256)",
          "increaseFeeGrowthGlobal1X128(uint256)",
          "setPosition(int24,int24,int128)",
          "moveToTick(int24)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "tick",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalLiquidity",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeGrowthGlobal0X128",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeGrowthGlobal1X128",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalGrowth0",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalGrowth1",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ticks",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:13"
            },
            {
              "label": "tick",
              "offset": 0,
              "slot": "1",
              "type": "t_int24",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:14"
            },
            {
              "label": "totalLiquidity",
              "offset": 0,
              "slot": "2",
              "type": "t_int256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:17"
            },
            {
              "label": "feeGrowthGlobal0X128",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:19"
            },
            {
              "label": "feeGrowthGlobal1X128",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:20"
            },
            {
              "label": "totalGrowth0",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:22"
            },
            {
              "label": "totalGrowth1",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:23"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickTest.sol:TickTest": {
        "src": "contracts/test/TickTest.sol:7",
        "version": {
          "withMetadata": "f69caaa73dcf787d521723dfb6288402d5992ac823abc3343129d28878936ef0",
          "withoutMetadata": "dca0df7e782d8281b53e71332aa3b2d222e6b652ea6d48f4f0a2dbde9f72e862",
          "linkedWithoutMetadata": "dca0df7e782d8281b53e71332aa3b2d222e6b652ea6d48f4f0a2dbde9f72e862"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Tick.sol:Tick"
        ],
        "methods": [
          "tickSpacingToMaxLiquidityPerTick(int24)",
          "setTick(int24,(uint128,int128,uint256,uint256,int56,uint160,uint32,bool))",
          "getFeeGrowthInside(int24,int24,int24,uint256,uint256)",
          "update(int24,int24,int128,uint256,uint256,uint160,int56,uint32,bool,uint128)",
          "clear(int24)",
          "cross(int24,uint256,uint256,uint160,int56,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "ticks",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "TickTest",
              "src": "contracts/test/TickTest.sol:10"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/UniswapV3PoolSwapTest.sol:UniswapV3PoolSwapTest": {
        "src": "contracts/test/UniswapV3PoolSwapTest.sol:9",
        "version": {
          "withMetadata": "5840c09c9dfab1ae1af12baf97ea7e55b67495cb2dd3a48ba8e0ba26015ccc5f",
          "withoutMetadata": "a57326d1f1cced75ba1e49652053232db528072e52aac1084a8027530a0c495c",
          "linkedWithoutMetadata": "a57326d1f1cced75ba1e49652053232db528072e52aac1084a8027530a0c495c"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "getSwapResult(address,bool,int256,uint160)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_amount0Delta",
              "offset": 0,
              "slot": "0",
              "type": "t_int256",
              "contract": "UniswapV3PoolSwapTest",
              "src": "contracts/test/UniswapV3PoolSwapTest.sol:10"
            },
            {
              "label": "_amount1Delta",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UniswapV3PoolSwapTest",
              "src": "contracts/test/UniswapV3PoolSwapTest.sol:11"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/UnsafeMathEchidnaTest.sol:UnsafeMathEchidnaTest": {
        "src": "contracts/test/UnsafeMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "540947c9b3b28ef1419f1f80c64bf730976029cbecd9c603fe09fee1fd3d1271",
          "withoutMetadata": "6111038855a82b46238fa4ca38d0c27948d9433d99b623e4b3054609f1a44745",
          "linkedWithoutMetadata": "6111038855a82b46238fa4ca38d0c27948d9433d99b623e4b3054609f1a44745"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/UnsafeMath.sol:UnsafeMath"
        ],
        "methods": [
          "checkDivRoundingUp(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "contracts/NoDelegateCall.sol:NoDelegateCall": {
        "src": "contracts/NoDelegateCall.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NoDelegateCall",
            "src": "contracts/NoDelegateCall.sol:10"
          },
          {
            "kind": "state-variable-immutable",
            "name": "original",
            "src": "contracts/NoDelegateCall.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/UniswapV3Factory.sol:UniswapV3Factory": {
        "src": "contracts/UniswapV3Factory.sol:13",
        "version": {
          "withMetadata": "2e5cd618d21e1e2b2da5cca814d19f0ab3cb51e4d66022e6b1ee3e55f3162a54",
          "withoutMetadata": "2e5cd618d21e1e2b2da5cca814d19f0ab3cb51e4d66022e6b1ee3e55f3162a54",
          "linkedWithoutMetadata": "2e5cd618d21e1e2b2da5cca814d19f0ab3cb51e4d66022e6b1ee3e55f3162a54"
        },
        "inherit": [
          "contracts/NoDelegateCall.sol:NoDelegateCall",
          "contracts/UniswapV3PoolDeployer.sol:UniswapV3PoolDeployer",
          "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer",
          "contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapV3Factory",
            "src": "contracts/UniswapV3Factory.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parameters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Parameters)2811_storage",
              "contract": "UniswapV3PoolDeployer",
              "src": "contracts/UniswapV3PoolDeployer.sol:18"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "UniswapV3Factory",
              "src": "contracts/UniswapV3Factory.sol:15"
            },
            {
              "label": "feeAmountTickSpacing",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint24,t_int24)",
              "contract": "UniswapV3Factory",
              "src": "contracts/UniswapV3Factory.sol:18"
            },
            {
              "label": "getPool",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint24,t_address)))",
              "contract": "UniswapV3Factory",
              "src": "contracts/UniswapV3Factory.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint24,t_address)))": {
              "label": "mapping(address => mapping(address => mapping(uint24 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
              "label": "mapping(address => mapping(uint24 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint24,t_address)": {
              "label": "mapping(uint24 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint24,t_int24)": {
              "label": "mapping(uint24 => int24)",
              "numberOfBytes": "32"
            },
            "t_struct(Parameters)2811_storage": {
              "label": "struct UniswapV3PoolDeployer.Parameters",
              "members": [
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "tickSpacing",
                  "type": "t_int24",
                  "offset": 23,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/UniswapV3Pool.sol:UniswapV3Pool": {
        "src": "contracts/UniswapV3Pool.sol:30",
        "version": {
          "withMetadata": "a54701ee9fcb23f972ca19247dc5e8b0cccecae798ceacdb5d036c7da6675ab0",
          "withoutMetadata": "bc782bd3d8fd548d7db7877df6ecaea1a82e4790e0ed421f0156b96598cbebf1",
          "linkedWithoutMetadata": "bc782bd3d8fd548d7db7877df6ecaea1a82e4790e0ed421f0156b96598cbebf1"
        },
        "inherit": [
          "contracts/NoDelegateCall.sol:NoDelegateCall",
          "contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool",
          "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/Tick.sol:Tick",
          "contracts/libraries/TickBitmap.sol:TickBitmap",
          "contracts/libraries/Position.sol:Position",
          "contracts/libraries/Oracle.sol:Oracle",
          "contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath",
          "contracts/libraries/LiquidityMath.sol:LiquidityMath",
          "contracts/libraries/TransferHelper.sol:TransferHelper",
          "contracts/libraries/SwapMath.sol:SwapMath",
          "contracts/libraries/FixedPoint128.sol:FixedPoint128",
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [
          "()",
          "snapshotCumulativesInside(int24,int24)",
          "observe(uint32[])",
          "increaseObservationCardinalityNext(uint16)",
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapV3Pool",
            "src": "contracts/UniswapV3Pool.sol:117"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts/UniswapV3Pool.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token0",
            "src": "contracts/UniswapV3Pool.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token1",
            "src": "contracts/UniswapV3Pool.sol:46"
          },
          {
            "kind": "state-variable-immutable",
            "name": "fee",
            "src": "contracts/UniswapV3Pool.sol:48"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tickSpacing",
            "src": "contracts/UniswapV3Pool.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxLiquidityPerTick",
            "src": "contracts/UniswapV3Pool.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "slot0",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Slot0)415_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:74"
            },
            {
              "label": "feeGrowthGlobal0X128",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:77"
            },
            {
              "label": "feeGrowthGlobal1X128",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:79"
            },
            {
              "label": "protocolFees",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(ProtocolFees)432_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:87"
            },
            {
              "label": "liquidity",
              "offset": 0,
              "slot": "4",
              "type": "t_uint128",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:90"
            },
            {
              "label": "ticks",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:93"
            },
            {
              "label": "tickBitmap",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:95"
            },
            {
              "label": "positions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_struct(Info)4924_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:97"
            },
            {
              "label": "observations",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_struct(Observation)4184_storage)65535_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:99"
            }
          ],
          "types": {
            "t_array(t_struct(Observation)4184_storage)65535_storage": {
              "label": "struct Oracle.Observation[65535]",
              "numberOfBytes": "2097120"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_bytes32,t_struct(Info)4924_storage)": {
              "label": "mapping(bytes32 => struct Position.Info)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)4924_storage": {
              "label": "struct Position.Info",
              "members": [
                {
                  "label": "liquidity",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthInside0LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthInside1LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokensOwed0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "tokensOwed1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Observation)4184_storage": {
              "label": "struct Oracle.Observation",
              "members": [
                {
                  "label": "blockTimestamp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickCumulative",
                  "type": "t_int56",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "secondsPerLiquidityCumulativeX128",
                  "type": "t_uint160",
                  "offset": 11,
                  "slot": "0"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ProtocolFees)432_storage": {
              "label": "struct UniswapV3Pool.ProtocolFees",
              "members": [
                {
                  "label": "token0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Slot0)415_storage": {
              "label": "struct UniswapV3Pool.Slot0",
              "members": [
                {
                  "label": "sqrtPriceX96",
                  "type": "t_uint160",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tick",
                  "type": "t_int24",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "observationIndex",
                  "type": "t_uint16",
                  "offset": 23,
                  "slot": "0"
                },
                {
                  "label": "observationCardinality",
                  "type": "t_uint16",
                  "offset": 25,
                  "slot": "0"
                },
                {
                  "label": "observationCardinalityNext",
                  "type": "t_uint16",
                  "offset": 27,
                  "slot": "0"
                },
                {
                  "label": "feeProtocol",
                  "type": "t_uint8",
                  "offset": 29,
                  "slot": "0"
                },
                {
                  "label": "unlocked",
                  "type": "t_bool",
                  "offset": 30,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/UniswapV3PoolDeployer.sol:UniswapV3PoolDeployer": {
        "src": "contracts/UniswapV3PoolDeployer.sol:8",
        "version": {
          "withMetadata": "3cd46af3c2a3145b9ccb35e16ce7f374a708b19c68f48b4f2e82dc129340a677",
          "withoutMetadata": "84a9cab36b941e3aedd10f518e73972eb6b5dcf62adec747c989c44f54f58aa4",
          "linkedWithoutMetadata": "84a9cab36b941e3aedd10f518e73972eb6b5dcf62adec747c989c44f54f58aa4"
        },
        "inherit": [
          "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "parameters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Parameters)2811_storage",
              "contract": "UniswapV3PoolDeployer",
              "src": "contracts/UniswapV3PoolDeployer.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_struct(Parameters)2811_storage": {
              "label": "struct UniswapV3PoolDeployer.Parameters",
              "members": [
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "tickSpacing",
                  "type": "t_int24",
                  "offset": 23,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IERC20Minimal.sol:IERC20Minimal": {
        "src": "contracts/interfaces/IERC20Minimal.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory": {
        "src": "contracts/interfaces/IUniswapV3Factory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer": {
        "src": "contracts/interfaces/IUniswapV3PoolDeployer.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "parameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/callback/IUniswapV3FlashCallback.sol:IUniswapV3FlashCallback": {
        "src": "contracts/interfaces/callback/IUniswapV3FlashCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3FlashCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/callback/IUniswapV3MintCallback.sol:IUniswapV3MintCallback": {
        "src": "contracts/interfaces/callback/IUniswapV3MintCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3MintCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/BitMath.sol:BitMath": {
        "src": "contracts/libraries/BitMath.sol:6",
        "version": {
          "withMetadata": "5c8f0fd371b886d5479bb3866f246d74c8925736beeb49b907402f3c8df86dc2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/FixedPoint128.sol:FixedPoint128": {
        "src": "contracts/libraries/FixedPoint128.sol:6",
        "version": {
          "withMetadata": "fc40e9597aa8cd5441f0d84bec7260aeb77d48647b9a25cc0b89590bcf20096b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/FixedPoint96.sol:FixedPoint96": {
        "src": "contracts/libraries/FixedPoint96.sol:7",
        "version": {
          "withMetadata": "3d72b830d128ac36b6030a6ad6c4e4105315190e98aed43197f8e98715f477c7",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/FullMath.sol:FullMath": {
        "src": "contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "c644980f15ed740d78677dac324c5d2cc00a63e74f284c539ac02c6a7ee7c25f",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/LiquidityMath.sol:LiquidityMath": {
        "src": "contracts/libraries/LiquidityMath.sol:5",
        "version": {
          "withMetadata": "f6799495dcaeb87aa6f2c5a08b5047f1438fb8ff10dabb68db0239c9374051fe",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath": {
        "src": "contracts/libraries/LowGasSafeMath.sol:6",
        "version": {
          "withMetadata": "b685c41ba08b78bd0e9b9689b8b3edee4040fd747a4abee7a4e768ea87f0ff60",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/Oracle.sol:Oracle": {
        "src": "contracts/libraries/Oracle.sol:11",
        "version": {
          "withMetadata": "8ea2f288d244d59901cfd97b99f54e13c0ae672de0720b2e9461c8550733de1f",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/Position.sol:Position": {
        "src": "contracts/libraries/Position.sol:11",
        "version": {
          "withMetadata": "a68dcf6d40320aa23cd8ea648ed7f4cc2bd8cd944450dcf020e9d12149f69baf",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LiquidityMath.sol:LiquidityMath",
          "contracts/libraries/FixedPoint128.sol:FixedPoint128",
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/SafeCast.sol:SafeCast": {
        "src": "contracts/libraries/SafeCast.sol:6",
        "version": {
          "withMetadata": "65b49579da503591c4bc341b362aff2ac600a6ea40977ee04605b936059a55fe",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath": {
        "src": "contracts/libraries/SqrtPriceMath.sol:13",
        "version": {
          "withMetadata": "089e04eda6da74524c67e6b7ce1bc6626dcaae729f029ae579c7146da6711305",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/FixedPoint96.sol:FixedPoint96",
          "contracts/libraries/FullMath.sol:FullMath",
          "contracts/libraries/UnsafeMath.sol:UnsafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/SwapMath.sol:SwapMath": {
        "src": "contracts/libraries/SwapMath.sol:9",
        "version": {
          "withMetadata": "301fdca028cf26a04112ef6a98f8cf3e82f44800998dcd806a2d78c2b8c1e06b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath",
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/Tick.sol:Tick": {
        "src": "contracts/libraries/Tick.sol:12",
        "version": {
          "withMetadata": "840b8af6517151751cc441959024ea5d8e1848dd9667ff882a8dd453e94be0bb",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/LiquidityMath.sol:LiquidityMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TickBitmap.sol:TickBitmap": {
        "src": "contracts/libraries/TickBitmap.sol:9",
        "version": {
          "withMetadata": "9b6948e018c22ee91fe2a0ac299404cd5d9eafee43b3e1e5f9ad8a1b0959712c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TickMath.sol:TickMath": {
        "src": "contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "f42c3ba9ae5d31b8595f37dbc6765b4076c1d6638eccec55021348942302b147",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "contracts/libraries/TransferHelper.sol:8",
        "version": {
          "withMetadata": "ea93e7f40cbce8c11b8da7dac7883680b4672408bfed464fab07dd998239dadd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/UnsafeMath.sol:UnsafeMath": {
        "src": "contracts/libraries/UnsafeMath.sol:6",
        "version": {
          "withMetadata": "c1436620d3426ccd8053afb4c9276b2f8e2f11b994c146232847ee672c191fd6",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/BitMathEchidnaTest.sol:BitMathEchidnaTest": {
        "src": "contracts/test/BitMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "138595fa2c4107be18f2f8c8dee8863920cae111747df5afb966f98107a66d24",
          "withoutMetadata": "4b159fa1d5e7263a49b144c2b7bd670030560816c5963b46d76cb94ab5e05fee",
          "linkedWithoutMetadata": "4b159fa1d5e7263a49b144c2b7bd670030560816c5963b46d76cb94ab5e05fee"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [
          "mostSignificantBitInvariant(uint256)",
          "leastSignificantBitInvariant(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/BitMathTest.sol:BitMathTest": {
        "src": "contracts/test/BitMathTest.sol:6",
        "version": {
          "withMetadata": "3e104710fc3ef1a3a8cbabd4b4b892a42a95d4a9be6ae6487cc9578acadaa2a5",
          "withoutMetadata": "1125f4d5481694b9a7e4f762aed8201016097ba25e4d1c4ff7511844bac6058c",
          "linkedWithoutMetadata": "1125f4d5481694b9a7e4f762aed8201016097ba25e4d1c4ff7511844bac6058c"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [
          "mostSignificantBit(uint256)",
          "getGasCostOfMostSignificantBit(uint256)",
          "leastSignificantBit(uint256)",
          "getGasCostOfLeastSignificantBit(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/FullMathEchidnaTest.sol:FullMathEchidnaTest": {
        "src": "contracts/test/FullMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "38665b7cd5c7ce11fa39f92f20ca7366f86e7c1ad9efc99073de029e2990b488",
          "withoutMetadata": "4d86e38b0b53f17b137ab364ac374bdcfdd1cda564b356af9ecf9fbbfb6efe80",
          "linkedWithoutMetadata": "4d86e38b0b53f17b137ab364ac374bdcfdd1cda564b356af9ecf9fbbfb6efe80"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [
          "checkMulDivRounding(uint256,uint256,uint256)",
          "checkMulDiv(uint256,uint256,uint256)",
          "checkMulDivRoundingUp(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/FullMathTest.sol:FullMathTest": {
        "src": "contracts/test/FullMathTest.sol:6",
        "version": {
          "withMetadata": "fc53882cbfa01bcd2f1358c966d84145861d00e747be434bf16fb4f437529e88",
          "withoutMetadata": "970dc1453c578cc3279e8aa8302183616da3525c3a2a65bfebb5b545126556f2",
          "linkedWithoutMetadata": "970dc1453c578cc3279e8aa8302183616da3525c3a2a65bfebb5b545126556f2"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [
          "mulDiv(uint256,uint256,uint256)",
          "mulDivRoundingUp(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/LiquidityMathTest.sol:LiquidityMathTest": {
        "src": "contracts/test/LiquidityMathTest.sol:6",
        "version": {
          "withMetadata": "60cc7971ca92d9fa349c266aa07617623de6b94bd9f2cfc29eb18096621cabfd",
          "withoutMetadata": "6d63f17d41f52f826851bc0055f5903f19c15d5d1cee38d0c136edeaa615078e",
          "linkedWithoutMetadata": "6d63f17d41f52f826851bc0055f5903f19c15d5d1cee38d0c136edeaa615078e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LiquidityMath.sol:LiquidityMath"
        ],
        "methods": [
          "addDelta(uint128,int128)",
          "getGasCostOfAddDelta(uint128,int128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/LowGasSafeMathEchidnaTest.sol:LowGasSafeMathEchidnaTest": {
        "src": "contracts/test/LowGasSafeMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "c03c3b20869857c0c5947f30aff5a647c4296100e0d773959938c320134d9920",
          "withoutMetadata": "faba97e8f5f45abc18bfc1b54eeed71a923713d4a8b06e4864aba6df8656cb7e",
          "linkedWithoutMetadata": "faba97e8f5f45abc18bfc1b54eeed71a923713d4a8b06e4864aba6df8656cb7e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath"
        ],
        "methods": [
          "checkAdd(uint256,uint256)",
          "checkSub(uint256,uint256)",
          "checkMul(uint256,uint256)",
          "checkAddi(int256,int256)",
          "checkSubi(int256,int256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/MockTimeUniswapV3Pool.sol:MockTimeUniswapV3Pool": {
        "src": "contracts/test/MockTimeUniswapV3Pool.sol:7",
        "version": {
          "withMetadata": "6d7d9b0ce9390a166c66ca7bd292802d67c0279fca52511338124b11b5afa9e3",
          "withoutMetadata": "f253380514ab84439f5320c65dddeae434e2a01f801a949d30da51a6e9f10b6c",
          "linkedWithoutMetadata": "f253380514ab84439f5320c65dddeae434e2a01f801a949d30da51a6e9f10b6c"
        },
        "inherit": [
          "contracts/UniswapV3Pool.sol:UniswapV3Pool",
          "contracts/NoDelegateCall.sol:NoDelegateCall",
          "contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool",
          "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [
          "setFeeGrowthGlobal0X128(uint256)",
          "setFeeGrowthGlobal1X128(uint256)",
          "advanceTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "time",
            "src": "contracts/test/MockTimeUniswapV3Pool.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "slot0",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Slot0)415_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:74"
            },
            {
              "label": "feeGrowthGlobal0X128",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:77"
            },
            {
              "label": "feeGrowthGlobal1X128",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:79"
            },
            {
              "label": "protocolFees",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(ProtocolFees)432_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:87"
            },
            {
              "label": "liquidity",
              "offset": 0,
              "slot": "4",
              "type": "t_uint128",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:90"
            },
            {
              "label": "ticks",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:93"
            },
            {
              "label": "tickBitmap",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:95"
            },
            {
              "label": "positions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_struct(Info)4924_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:97"
            },
            {
              "label": "observations",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_struct(Observation)4184_storage)65535_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:99"
            },
            {
              "label": "time",
              "offset": 0,
              "slot": "65543",
              "type": "t_uint256",
              "contract": "MockTimeUniswapV3Pool",
              "src": "contracts/test/MockTimeUniswapV3Pool.sol:9"
            }
          ],
          "types": {
            "t_array(t_struct(Observation)4184_storage)65535_storage": {
              "label": "struct Oracle.Observation[65535]",
              "numberOfBytes": "2097120"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_bytes32,t_struct(Info)4924_storage)": {
              "label": "mapping(bytes32 => struct Position.Info)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)4924_storage": {
              "label": "struct Position.Info",
              "members": [
                {
                  "label": "liquidity",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthInside0LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthInside1LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokensOwed0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "tokensOwed1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Observation)4184_storage": {
              "label": "struct Oracle.Observation",
              "members": [
                {
                  "label": "blockTimestamp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickCumulative",
                  "type": "t_int56",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "secondsPerLiquidityCumulativeX128",
                  "type": "t_uint160",
                  "offset": 11,
                  "slot": "0"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ProtocolFees)432_storage": {
              "label": "struct UniswapV3Pool.ProtocolFees",
              "members": [
                {
                  "label": "token0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Slot0)415_storage": {
              "label": "struct UniswapV3Pool.Slot0",
              "members": [
                {
                  "label": "sqrtPriceX96",
                  "type": "t_uint160",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tick",
                  "type": "t_int24",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "observationIndex",
                  "type": "t_uint16",
                  "offset": 23,
                  "slot": "0"
                },
                {
                  "label": "observationCardinality",
                  "type": "t_uint16",
                  "offset": 25,
                  "slot": "0"
                },
                {
                  "label": "observationCardinalityNext",
                  "type": "t_uint16",
                  "offset": 27,
                  "slot": "0"
                },
                {
                  "label": "feeProtocol",
                  "type": "t_uint8",
                  "offset": 29,
                  "slot": "0"
                },
                {
                  "label": "unlocked",
                  "type": "t_bool",
                  "offset": 30,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/MockTimeUniswapV3PoolDeployer.sol:MockTimeUniswapV3PoolDeployer": {
        "src": "contracts/test/MockTimeUniswapV3PoolDeployer.sol:8",
        "version": {
          "withMetadata": "2f7298f5ec0a712b622dd787883f9b5de25fede9d49ee7bd3de7eb1a0504fe76",
          "withoutMetadata": "0be599d32e0c534b889f1ce6061bc26ec554cf5cec457359c69c6dab99d11cbe",
          "linkedWithoutMetadata": "0be599d32e0c534b889f1ce6061bc26ec554cf5cec457359c69c6dab99d11cbe"
        },
        "inherit": [
          "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer"
        ],
        "libraries": [],
        "methods": [
          "deploy(address,address,address,uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "parameters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Parameters)7983_storage",
              "contract": "MockTimeUniswapV3PoolDeployer",
              "src": "contracts/test/MockTimeUniswapV3PoolDeployer.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_struct(Parameters)7983_storage": {
              "label": "struct MockTimeUniswapV3PoolDeployer.Parameters",
              "members": [
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "tickSpacing",
                  "type": "t_int24",
                  "offset": 23,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/NoDelegateCallTest.sol:NoDelegateCallTest": {
        "src": "contracts/test/NoDelegateCallTest.sol:6",
        "version": {
          "withMetadata": "763c285ab33caf410966afedbcbe816ef8d78346203b8a38dbac24e82d9a7600",
          "withoutMetadata": "f6986b5861202c2c75821dd3fac18c071e081dc4cb110719a4ad75fb35e587b1",
          "linkedWithoutMetadata": "f6986b5861202c2c75821dd3fac18c071e081dc4cb110719a4ad75fb35e587b1"
        },
        "inherit": [
          "contracts/NoDelegateCall.sol:NoDelegateCall"
        ],
        "libraries": [],
        "methods": [
          "canBeDelegateCalled()",
          "cannotBeDelegateCalled()",
          "getGasCostOfCanBeDelegateCalled()",
          "getGasCostOfCannotBeDelegateCalled()",
          "callsIntoNoDelegateCallFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/OracleEchidnaTest.sol:OracleEchidnaTest": {
        "src": "contracts/test/OracleEchidnaTest.sol:7",
        "version": {
          "withMetadata": "669701955934347bd944d6afb9c14d89db50ba602d126d7520f228a4ec742848",
          "withoutMetadata": "25c5e808e6b627bc3594a5427c0f1c6eb65bdbcc717476975128fcfbda226b99",
          "linkedWithoutMetadata": "25c5e808e6b627bc3594a5427c0f1c6eb65bdbcc717476975128fcfbda226b99"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "initialize(uint32,int24,uint128)",
          "advanceTime(uint32)",
          "update(uint32,int24,uint128)",
          "grow(uint16)",
          "echidna_indexAlwaysLtCardinality()",
          "echidna_AlwaysInitialized()",
          "echidna_cardinalityAlwaysLteNext()",
          "echidna_canAlwaysObserve0IfInitialized()",
          "checkTwoAdjacentObservationsTickCumulativeModTimeElapsedAlways0(uint16)",
          "checkTimeWeightedAveragesAlwaysFitsType(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleEchidnaTest",
            "src": "contracts/test/OracleEchidnaTest.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(OracleTest)9021",
              "contract": "OracleEchidnaTest",
              "src": "contracts/test/OracleEchidnaTest.sol:8"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "OracleEchidnaTest",
              "src": "contracts/test/OracleEchidnaTest.sol:10"
            },
            {
              "label": "timePassed",
              "offset": 21,
              "slot": "0",
              "type": "t_uint32",
              "contract": "OracleEchidnaTest",
              "src": "contracts/test/OracleEchidnaTest.sol:11"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(OracleTest)9021": {
              "label": "contract OracleTest",
              "numberOfBytes": "20"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/OracleTest.sol:OracleTest": {
        "src": "contracts/test/OracleTest.sol:7",
        "version": {
          "withMetadata": "5c429be877ca1d7ed023be14e15cde2dde66c2acb494680542a907e82b3dd66e",
          "withoutMetadata": "c367263c871c889f7e79b4c9ff217d514424fc244db03c2cb7d70b2e9c0ee501",
          "linkedWithoutMetadata": "c367263c871c889f7e79b4c9ff217d514424fc244db03c2cb7d70b2e9c0ee501"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Oracle.sol:Oracle"
        ],
        "methods": [
          "initialize((uint32,int24,uint128))",
          "advanceTime(uint32)",
          "update((uint32,int24,uint128))",
          "batchUpdate(struct OracleTest.UpdateParams[])",
          "grow(uint16)",
          "observe(uint32[])",
          "getGasCostOfObserve(uint32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "observations",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(Observation)4184_storage)65535_storage",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:10"
            },
            {
              "label": "time",
              "offset": 0,
              "slot": "65535",
              "type": "t_uint32",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:12"
            },
            {
              "label": "tick",
              "offset": 4,
              "slot": "65535",
              "type": "t_int24",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:13"
            },
            {
              "label": "liquidity",
              "offset": 7,
              "slot": "65535",
              "type": "t_uint128",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:14"
            },
            {
              "label": "index",
              "offset": 23,
              "slot": "65535",
              "type": "t_uint16",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:15"
            },
            {
              "label": "cardinality",
              "offset": 25,
              "slot": "65535",
              "type": "t_uint16",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:16"
            },
            {
              "label": "cardinalityNext",
              "offset": 27,
              "slot": "65535",
              "type": "t_uint16",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:17"
            }
          ],
          "types": {
            "t_array(t_struct(Observation)4184_storage)65535_storage": {
              "label": "struct Oracle.Observation[65535]",
              "numberOfBytes": "2097120"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_struct(Observation)4184_storage": {
              "label": "struct Oracle.Observation",
              "members": [
                {
                  "label": "blockTimestamp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickCumulative",
                  "type": "t_int56",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "secondsPerLiquidityCumulativeX128",
                  "type": "t_uint160",
                  "offset": 11,
                  "slot": "0"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SqrtPriceMathEchidnaTest.sol:SqrtPriceMathEchidnaTest": {
        "src": "contracts/test/SqrtPriceMathEchidnaTest.sol:8",
        "version": {
          "withMetadata": "f551e6400b8d90c1b4857acbfeb45f87ca8feef58b390d3ffef62d3c2241d176",
          "withoutMetadata": "321744a6ab5bf4adf84c3dc1103a1712b42f534a63319a1cf1ada2c5e925afca",
          "linkedWithoutMetadata": "321744a6ab5bf4adf84c3dc1103a1712b42f534a63319a1cf1ada2c5e925afca"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/FullMath.sol:FullMath",
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath",
          "contracts/libraries/FixedPoint96.sol:FixedPoint96"
        ],
        "methods": [
          "mulDivRoundingUpInvariants(uint256,uint256,uint256)",
          "getNextSqrtPriceFromInputInvariants(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromOutputInvariants(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromAmount0RoundingUpInvariants(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromAmount1RoundingDownInvariants(uint160,uint128,uint256,bool)",
          "getAmount0DeltaInvariants(uint160,uint160,uint128)",
          "getAmount0DeltaEquivalency(uint160,uint160,uint128,bool)",
          "getAmount1DeltaInvariants(uint160,uint160,uint128)",
          "getAmount0DeltaSignedInvariants(uint160,uint160,int128)",
          "getAmount1DeltaSignedInvariants(uint160,uint160,int128)",
          "getOutOfRangeMintInvariants(uint160,uint160,int128)",
          "getInRangeMintInvariants(uint160,uint160,uint160,int128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SqrtPriceMathTest.sol:SqrtPriceMathTest": {
        "src": "contracts/test/SqrtPriceMathTest.sol:6",
        "version": {
          "withMetadata": "a3d5b4f26fd7ca21ceed81ccb43a2cb8927108c224da710021c42c53b11928b1",
          "withoutMetadata": "c33cb95cebbcb2c700c07aa26856f0a5197b4a4d585b7e02e54275921d9d6374",
          "linkedWithoutMetadata": "c33cb95cebbcb2c700c07aa26856f0a5197b4a4d585b7e02e54275921d9d6374"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath"
        ],
        "methods": [
          "getNextSqrtPriceFromInput(uint160,uint128,uint256,bool)",
          "getGasCostOfGetNextSqrtPriceFromInput(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromOutput(uint160,uint128,uint256,bool)",
          "getGasCostOfGetNextSqrtPriceFromOutput(uint160,uint128,uint256,bool)",
          "getAmount0Delta(uint160,uint160,uint128,bool)",
          "getAmount1Delta(uint160,uint160,uint128,bool)",
          "getGasCostOfGetAmount0Delta(uint160,uint160,uint128,bool)",
          "getGasCostOfGetAmount1Delta(uint160,uint160,uint128,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SwapMathEchidnaTest.sol:SwapMathEchidnaTest": {
        "src": "contracts/test/SwapMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "e6e3394834a4b71deb5a1e9195287fc101a5975363f2a33d05a5b5029d498beb",
          "withoutMetadata": "ad13ccfe06480aa373b1ffcb9125c3316e45d77e6eb84d33e914bc2718ac9afb",
          "linkedWithoutMetadata": "ad13ccfe06480aa373b1ffcb9125c3316e45d77e6eb84d33e914bc2718ac9afb"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SwapMath.sol:SwapMath"
        ],
        "methods": [
          "checkComputeSwapStepInvariants(uint160,uint160,uint128,int256,uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SwapMathTest.sol:SwapMathTest": {
        "src": "contracts/test/SwapMathTest.sol:6",
        "version": {
          "withMetadata": "2ac62bea90e1d43abad4ce60d68c00114e2c80d120981bd46b3b2add5ebc8272",
          "withoutMetadata": "195d496be7a789b235a468adca519221bad02ca3b1297bb960929c9c703ae507",
          "linkedWithoutMetadata": "195d496be7a789b235a468adca519221bad02ca3b1297bb960929c9c703ae507"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SwapMath.sol:SwapMath"
        ],
        "methods": [
          "computeSwapStep(uint160,uint160,uint128,int256,uint24)",
          "getGasCostOfComputeSwapStep(uint160,uint160,uint128,int256,uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestERC20.sol:TestERC20": {
        "src": "contracts/test/TestERC20.sol:6",
        "version": {
          "withMetadata": "9a4335a4687a54ebd8d1815c8e51c573346b000d079a6ad320de0e682e115fd3",
          "withoutMetadata": "938bb3da8233538f8e6380ed297c6c043cf3c727ad41e95c7e4f997cc88a0972",
          "linkedWithoutMetadata": "938bb3da8233538f8e6380ed297c6c043cf3c727ad41e95c7e4f997cc88a0972"
        },
        "inherit": [
          "contracts/interfaces/IERC20Minimal.sol:IERC20Minimal"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TestERC20",
            "src": "contracts/test/TestERC20.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TestERC20",
              "src": "contracts/test/TestERC20.sol:7"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TestERC20",
              "src": "contracts/test/TestERC20.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3Callee.sol:TestUniswapV3Callee": {
        "src": "contracts/test/TestUniswapV3Callee.sol:15",
        "version": {
          "withMetadata": "fee3888682d989cc97fe7b77d56f7e5b5f28f1bb44e9a5e16c31a4809b4c7934",
          "withoutMetadata": "4dd430c74c933c2c5db0ff27afed45deec73ef59c15d8100970c73f2a34a58eb",
          "linkedWithoutMetadata": "4dd430c74c933c2c5db0ff27afed45deec73ef59c15d8100970c73f2a34a58eb"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3FlashCallback.sol:IUniswapV3FlashCallback",
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback",
          "contracts/interfaces/callback/IUniswapV3MintCallback.sol:IUniswapV3MintCallback"
        ],
        "libraries": [
          "contracts/libraries/SafeCast.sol:SafeCast"
        ],
        "methods": [
          "swapExact0For1(address,uint256,address,uint160)",
          "swap0ForExact1(address,uint256,address,uint160)",
          "swapExact1For0(address,uint256,address,uint160)",
          "swap1ForExact0(address,uint256,address,uint160)",
          "swapToLowerSqrtPrice(address,uint160,address)",
          "swapToHigherSqrtPrice(address,uint160,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)",
          "mint(address,address,int24,int24,uint128)",
          "uniswapV3MintCallback(uint256,uint256,bytes)",
          "flash(address,address,uint256,uint256,uint256,uint256)",
          "uniswapV3FlashCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3ReentrantCallee.sol:TestUniswapV3ReentrantCallee": {
        "src": "contracts/test/TestUniswapV3ReentrantCallee.sol:10",
        "version": {
          "withMetadata": "62f9a039922ebe6d880a00598da628e52e0804bcfbc958e593ed2390a4529b93",
          "withoutMetadata": "d096265f890e259eb446d24fbc8c474be5ebba983b14526947c62281c71a424b",
          "linkedWithoutMetadata": "d096265f890e259eb446d24fbc8c474be5ebba983b14526947c62281c71a424b"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "swapToReenter(address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3Router.sol:TestUniswapV3Router": {
        "src": "contracts/test/TestUniswapV3Router.sol:11",
        "version": {
          "withMetadata": "2171266064faf7576996e444602a4ab7202303e0431c1c6ab06ca7c0b8f0c501",
          "withoutMetadata": "7036f94949d44ad0947e3571d65cb0ad9edca55c4caa01b01684404d13009ca9",
          "linkedWithoutMetadata": "7036f94949d44ad0947e3571d65cb0ad9edca55c4caa01b01684404d13009ca9"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "swapForExact0Multi(address,address,address,uint256)",
          "swapForExact1Multi(address,address,address,uint256)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3SwapPay.sol:TestUniswapV3SwapPay": {
        "src": "contracts/test/TestUniswapV3SwapPay.sol:9",
        "version": {
          "withMetadata": "259d87f6effd97374773ba501fb185beb62c764d0f1e1174a7f49078d5e048de",
          "withoutMetadata": "885c1364b78717b9c9bf0c5008b2ce72eded24ba2bb56dc0da85e69282d006e3",
          "linkedWithoutMetadata": "885c1364b78717b9c9bf0c5008b2ce72eded24ba2bb56dc0da85e69282d006e3"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "swap(address,address,bool,uint160,int256,uint256,uint256)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickBitmapEchidnaTest.sol:TickBitmapEchidnaTest": {
        "src": "contracts/test/TickBitmapEchidnaTest.sol:6",
        "version": {
          "withMetadata": "036418df22a6f92d72215afc7027da7a0069bd7c258b13630e63e06bf6adc091",
          "withoutMetadata": "aa3219a23f7644ada604e18bad98c36e1dc766d05af2976e73e146f1e9ec0b79",
          "linkedWithoutMetadata": "aa3219a23f7644ada604e18bad98c36e1dc766d05af2976e73e146f1e9ec0b79"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickBitmap.sol:TickBitmap"
        ],
        "methods": [
          "flipTick(int24)",
          "checkNextInitializedTickWithinOneWordInvariants(int24,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bitmap",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "TickBitmapEchidnaTest",
              "src": "contracts/test/TickBitmapEchidnaTest.sol:9"
            }
          ],
          "types": {
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickBitmapTest.sol:TickBitmapTest": {
        "src": "contracts/test/TickBitmapTest.sol:6",
        "version": {
          "withMetadata": "d4dc09b819074bedc39cfc382ed0e8fe44844515737c9d843f455c9487f1ec41",
          "withoutMetadata": "e1f3596aca8b8d0677f0e709f3e4120b5e295910f3211b12bcb2058fd0a8acdb",
          "linkedWithoutMetadata": "e1f3596aca8b8d0677f0e709f3e4120b5e295910f3211b12bcb2058fd0a8acdb"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickBitmap.sol:TickBitmap"
        ],
        "methods": [
          "flipTick(int24)",
          "getGasCostOfFlipTick(int24)",
          "nextInitializedTickWithinOneWord(int24,bool)",
          "getGasCostOfNextInitializedTickWithinOneWord(int24,bool)",
          "isInitialized(int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bitmap",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "TickBitmapTest",
              "src": "contracts/test/TickBitmapTest.sol:9"
            }
          ],
          "types": {
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickEchidnaTest.sol:TickEchidnaTest": {
        "src": "contracts/test/TickEchidnaTest.sol:6",
        "version": {
          "withMetadata": "b241fd9039aba503df76f8b4f018630614d49fe9d499c713a9d23eb2bbe57601",
          "withoutMetadata": "e79be2ea72fef3ce3aee1b700a67c4c21c141b21c0a9195f9e26b6236b800c1e",
          "linkedWithoutMetadata": "e79be2ea72fef3ce3aee1b700a67c4c21c141b21c0a9195f9e26b6236b800c1e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/Tick.sol:Tick"
        ],
        "methods": [
          "checkTickSpacingToParametersInvariants(int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickMathEchidnaTest.sol:TickMathEchidnaTest": {
        "src": "contracts/test/TickMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "27061fb450323ea96fd6608ab0248cb19d07df54a869deb21295c5bde8643604",
          "withoutMetadata": "f235f1457599ad517cb0348be7e03d30920b49bcc561f132a6c4a0d4766f79b0",
          "linkedWithoutMetadata": "f235f1457599ad517cb0348be7e03d30920b49bcc561f132a6c4a0d4766f79b0"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "checkGetSqrtRatioAtTickInvariants(int24)",
          "checkGetTickAtSqrtRatioInvariants(uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickMathTest.sol:TickMathTest": {
        "src": "contracts/test/TickMathTest.sol:6",
        "version": {
          "withMetadata": "64f274bd276654a648b35490c72470f8026d0eebdb92b53980b85b346754ff07",
          "withoutMetadata": "561d3d32afba60a42d81ef4914ef98a403e503cfe10acdc327f35c2ec3b54f1b",
          "linkedWithoutMetadata": "561d3d32afba60a42d81ef4914ef98a403e503cfe10acdc327f35c2ec3b54f1b"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "getSqrtRatioAtTick(int24)",
          "getGasCostOfGetSqrtRatioAtTick(int24)",
          "getTickAtSqrtRatio(uint160)",
          "getGasCostOfGetTickAtSqrtRatio(uint160)",
          "MIN_SQRT_RATIO()",
          "MAX_SQRT_RATIO()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickOverflowSafetyEchidnaTest.sol:TickOverflowSafetyEchidnaTest": {
        "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:6",
        "version": {
          "withMetadata": "58a7e18bac471e530d26a2a3551cce196a97fd507513dbdf5aacea7b82aedfad",
          "withoutMetadata": "dd9d1c6af174aa4fa6789fe30db5a52321576a17e678811406d8b01e0efbeeb7",
          "linkedWithoutMetadata": "dd9d1c6af174aa4fa6789fe30db5a52321576a17e678811406d8b01e0efbeeb7"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Tick.sol:Tick"
        ],
        "methods": [
          "increaseFeeGrowthGlobal0X128(uint256)",
          "increaseFeeGrowthGlobal1X128(uint256)",
          "setPosition(int24,int24,int128)",
          "moveToTick(int24)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "tick",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalLiquidity",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeGrowthGlobal0X128",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeGrowthGlobal1X128",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalGrowth0",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalGrowth1",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ticks",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:13"
            },
            {
              "label": "tick",
              "offset": 0,
              "slot": "1",
              "type": "t_int24",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:14"
            },
            {
              "label": "totalLiquidity",
              "offset": 0,
              "slot": "2",
              "type": "t_int256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:17"
            },
            {
              "label": "feeGrowthGlobal0X128",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:19"
            },
            {
              "label": "feeGrowthGlobal1X128",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:20"
            },
            {
              "label": "totalGrowth0",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:22"
            },
            {
              "label": "totalGrowth1",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:23"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickTest.sol:TickTest": {
        "src": "contracts/test/TickTest.sol:7",
        "version": {
          "withMetadata": "9a4bbaf9f25a6592785a785b6547f83b0c0118dda233cea966628137e3fe6d0a",
          "withoutMetadata": "3cff600d6511f8fa3bd1b01f58cfb5eea574a904456c09ede24e81879141e156",
          "linkedWithoutMetadata": "3cff600d6511f8fa3bd1b01f58cfb5eea574a904456c09ede24e81879141e156"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Tick.sol:Tick"
        ],
        "methods": [
          "tickSpacingToMaxLiquidityPerTick(int24)",
          "setTick(int24,(uint128,int128,uint256,uint256,int56,uint160,uint32,bool))",
          "getFeeGrowthInside(int24,int24,int24,uint256,uint256)",
          "update(int24,int24,int128,uint256,uint256,uint160,int56,uint32,bool,uint128)",
          "clear(int24)",
          "cross(int24,uint256,uint256,uint160,int56,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "ticks",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "TickTest",
              "src": "contracts/test/TickTest.sol:10"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/UniswapV3PoolSwapTest.sol:UniswapV3PoolSwapTest": {
        "src": "contracts/test/UniswapV3PoolSwapTest.sol:9",
        "version": {
          "withMetadata": "f49f473ddbe1850a633d6960f53673a387b1327c067fc2538e54833e692b3ef0",
          "withoutMetadata": "03a9c8e38501df5ad2bfdde15a8a5e21c892c98a6633fd3b36021fdd23ec0260",
          "linkedWithoutMetadata": "03a9c8e38501df5ad2bfdde15a8a5e21c892c98a6633fd3b36021fdd23ec0260"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "getSwapResult(address,bool,int256,uint160)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_amount0Delta",
              "offset": 0,
              "slot": "0",
              "type": "t_int256",
              "contract": "UniswapV3PoolSwapTest",
              "src": "contracts/test/UniswapV3PoolSwapTest.sol:10"
            },
            {
              "label": "_amount1Delta",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UniswapV3PoolSwapTest",
              "src": "contracts/test/UniswapV3PoolSwapTest.sol:11"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/UnsafeMathEchidnaTest.sol:UnsafeMathEchidnaTest": {
        "src": "contracts/test/UnsafeMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "00cbdc1d2dee0acd573b5ce9b4e83f24579b9166deea8cbf628fddf24ea3bfa4",
          "withoutMetadata": "6111038855a82b46238fa4ca38d0c27948d9433d99b623e4b3054609f1a44745",
          "linkedWithoutMetadata": "6111038855a82b46238fa4ca38d0c27948d9433d99b623e4b3054609f1a44745"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/UnsafeMath.sol:UnsafeMath"
        ],
        "methods": [
          "checkDivRoundingUp(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "contracts/NoDelegateCall.sol:NoDelegateCall": {
        "src": "contracts/NoDelegateCall.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NoDelegateCall",
            "src": "contracts/NoDelegateCall.sol:10"
          },
          {
            "kind": "state-variable-immutable",
            "name": "original",
            "src": "contracts/NoDelegateCall.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/UniswapV3Factory.sol:UniswapV3Factory": {
        "src": "contracts/UniswapV3Factory.sol:13",
        "version": {
          "withMetadata": "a3ef826c699c877baaf75de58fa5c086cb61bfe2fc733bfcccf09d1f2ec22cbc",
          "withoutMetadata": "a3ef826c699c877baaf75de58fa5c086cb61bfe2fc733bfcccf09d1f2ec22cbc",
          "linkedWithoutMetadata": "a3ef826c699c877baaf75de58fa5c086cb61bfe2fc733bfcccf09d1f2ec22cbc"
        },
        "inherit": [
          "contracts/NoDelegateCall.sol:NoDelegateCall",
          "contracts/UniswapV3PoolDeployer.sol:UniswapV3PoolDeployer",
          "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer",
          "contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapV3Factory",
            "src": "contracts/UniswapV3Factory.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parameters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Parameters)2811_storage",
              "contract": "UniswapV3PoolDeployer",
              "src": "contracts/UniswapV3PoolDeployer.sol:18"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "UniswapV3Factory",
              "src": "contracts/UniswapV3Factory.sol:15"
            },
            {
              "label": "feeAmountTickSpacing",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint24,t_int24)",
              "contract": "UniswapV3Factory",
              "src": "contracts/UniswapV3Factory.sol:18"
            },
            {
              "label": "getPool",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint24,t_address)))",
              "contract": "UniswapV3Factory",
              "src": "contracts/UniswapV3Factory.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint24,t_address)))": {
              "label": "mapping(address => mapping(address => mapping(uint24 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
              "label": "mapping(address => mapping(uint24 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint24,t_address)": {
              "label": "mapping(uint24 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint24,t_int24)": {
              "label": "mapping(uint24 => int24)",
              "numberOfBytes": "32"
            },
            "t_struct(Parameters)2811_storage": {
              "label": "struct UniswapV3PoolDeployer.Parameters",
              "members": [
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "tickSpacing",
                  "type": "t_int24",
                  "offset": 23,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/UniswapV3Pool.sol:UniswapV3Pool": {
        "src": "contracts/UniswapV3Pool.sol:30",
        "version": {
          "withMetadata": "2eba6f879d3dd79b5c809e364b8f1fd7a8523f8ceba8ace3ed0592add236ddea",
          "withoutMetadata": "687e26e4da8f01ea372edc39a870d80f12f6352bf9aa89b3606a26034f3e4885",
          "linkedWithoutMetadata": "687e26e4da8f01ea372edc39a870d80f12f6352bf9aa89b3606a26034f3e4885"
        },
        "inherit": [
          "contracts/NoDelegateCall.sol:NoDelegateCall",
          "contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool",
          "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/Tick.sol:Tick",
          "contracts/libraries/TickBitmap.sol:TickBitmap",
          "contracts/libraries/Position.sol:Position",
          "contracts/libraries/Oracle.sol:Oracle",
          "contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath",
          "contracts/libraries/LiquidityMath.sol:LiquidityMath",
          "contracts/libraries/TransferHelper.sol:TransferHelper",
          "contracts/libraries/SwapMath.sol:SwapMath",
          "contracts/libraries/FixedPoint128.sol:FixedPoint128",
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [
          "()",
          "snapshotCumulativesInside(int24,int24)",
          "observe(uint32[])",
          "increaseObservationCardinalityNext(uint16)",
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapV3Pool",
            "src": "contracts/UniswapV3Pool.sol:117"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts/UniswapV3Pool.sol:42"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token0",
            "src": "contracts/UniswapV3Pool.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token1",
            "src": "contracts/UniswapV3Pool.sol:46"
          },
          {
            "kind": "state-variable-immutable",
            "name": "fee",
            "src": "contracts/UniswapV3Pool.sol:48"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tickSpacing",
            "src": "contracts/UniswapV3Pool.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxLiquidityPerTick",
            "src": "contracts/UniswapV3Pool.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "slot0",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Slot0)415_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:74"
            },
            {
              "label": "feeGrowthGlobal0X128",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:77"
            },
            {
              "label": "feeGrowthGlobal1X128",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:79"
            },
            {
              "label": "protocolFees",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(ProtocolFees)432_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:87"
            },
            {
              "label": "liquidity",
              "offset": 0,
              "slot": "4",
              "type": "t_uint128",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:90"
            },
            {
              "label": "ticks",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:93"
            },
            {
              "label": "tickBitmap",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:95"
            },
            {
              "label": "positions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_struct(Info)4924_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:97"
            },
            {
              "label": "observations",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_struct(Observation)4184_storage)65535_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:99"
            }
          ],
          "types": {
            "t_array(t_struct(Observation)4184_storage)65535_storage": {
              "label": "struct Oracle.Observation[65535]",
              "numberOfBytes": "2097120"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_bytes32,t_struct(Info)4924_storage)": {
              "label": "mapping(bytes32 => struct Position.Info)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)4924_storage": {
              "label": "struct Position.Info",
              "members": [
                {
                  "label": "liquidity",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthInside0LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthInside1LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokensOwed0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "tokensOwed1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Observation)4184_storage": {
              "label": "struct Oracle.Observation",
              "members": [
                {
                  "label": "blockTimestamp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickCumulative",
                  "type": "t_int56",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "secondsPerLiquidityCumulativeX128",
                  "type": "t_uint160",
                  "offset": 11,
                  "slot": "0"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ProtocolFees)432_storage": {
              "label": "struct UniswapV3Pool.ProtocolFees",
              "members": [
                {
                  "label": "token0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Slot0)415_storage": {
              "label": "struct UniswapV3Pool.Slot0",
              "members": [
                {
                  "label": "sqrtPriceX96",
                  "type": "t_uint160",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tick",
                  "type": "t_int24",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "observationIndex",
                  "type": "t_uint16",
                  "offset": 23,
                  "slot": "0"
                },
                {
                  "label": "observationCardinality",
                  "type": "t_uint16",
                  "offset": 25,
                  "slot": "0"
                },
                {
                  "label": "observationCardinalityNext",
                  "type": "t_uint16",
                  "offset": 27,
                  "slot": "0"
                },
                {
                  "label": "feeProtocol",
                  "type": "t_uint8",
                  "offset": 29,
                  "slot": "0"
                },
                {
                  "label": "unlocked",
                  "type": "t_bool",
                  "offset": 30,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/UniswapV3PoolDeployer.sol:UniswapV3PoolDeployer": {
        "src": "contracts/UniswapV3PoolDeployer.sol:8",
        "version": {
          "withMetadata": "ddcc504606620e4e573c0f477eff30c01e1ac7dce1990ebb969f9ac16f4bd9a6",
          "withoutMetadata": "84a9cab36b941e3aedd10f518e73972eb6b5dcf62adec747c989c44f54f58aa4",
          "linkedWithoutMetadata": "84a9cab36b941e3aedd10f518e73972eb6b5dcf62adec747c989c44f54f58aa4"
        },
        "inherit": [
          "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "parameters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Parameters)2811_storage",
              "contract": "UniswapV3PoolDeployer",
              "src": "contracts/UniswapV3PoolDeployer.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_struct(Parameters)2811_storage": {
              "label": "struct UniswapV3PoolDeployer.Parameters",
              "members": [
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "tickSpacing",
                  "type": "t_int24",
                  "offset": 23,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IERC20Minimal.sol:IERC20Minimal": {
        "src": "contracts/interfaces/IERC20Minimal.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory": {
        "src": "contracts/interfaces/IUniswapV3Factory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer": {
        "src": "contracts/interfaces/IUniswapV3PoolDeployer.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "parameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/callback/IUniswapV3FlashCallback.sol:IUniswapV3FlashCallback": {
        "src": "contracts/interfaces/callback/IUniswapV3FlashCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3FlashCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/callback/IUniswapV3MintCallback.sol:IUniswapV3MintCallback": {
        "src": "contracts/interfaces/callback/IUniswapV3MintCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3MintCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/BitMath.sol:BitMath": {
        "src": "contracts/libraries/BitMath.sol:6",
        "version": {
          "withMetadata": "7ad5a3a993407e9d2ad91dc63481478ce648df1c5ba8915c6c50da37d1f1f4b2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/FixedPoint128.sol:FixedPoint128": {
        "src": "contracts/libraries/FixedPoint128.sol:6",
        "version": {
          "withMetadata": "d77a9f7fc25df8f1f61618282db3dab873e358b77f32333f5a7f20f2ed1b02d3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/FixedPoint96.sol:FixedPoint96": {
        "src": "contracts/libraries/FixedPoint96.sol:7",
        "version": {
          "withMetadata": "e0cf3f1b20537b7244ca480a87260a5619e5797ee139e6d199e19cbe244a13d4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/FullMath.sol:FullMath": {
        "src": "contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "343759f99e56e58efbe957f109746114354558b6c79f76057d184cdc8d322965",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/LiquidityMath.sol:LiquidityMath": {
        "src": "contracts/libraries/LiquidityMath.sol:5",
        "version": {
          "withMetadata": "1af939c0214a19647bad901e65821bfc1f13dc75ea3a923999ad035cd1129708",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath": {
        "src": "contracts/libraries/LowGasSafeMath.sol:6",
        "version": {
          "withMetadata": "9cb18ca4f2ab1514d627867a4a675e076a28a72a3a2166e4d20babe3d39bb772",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/Oracle.sol:Oracle": {
        "src": "contracts/libraries/Oracle.sol:11",
        "version": {
          "withMetadata": "85bd96367697c469209101c3ba3abeca0a7253bbddf3a1ecdbccb0dc9da6262c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/Position.sol:Position": {
        "src": "contracts/libraries/Position.sol:11",
        "version": {
          "withMetadata": "6f9c5dff1ac4dc86fad7ba6e91b62a5c9cb932773725dac44cb750dc736f2b92",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LiquidityMath.sol:LiquidityMath",
          "contracts/libraries/FixedPoint128.sol:FixedPoint128",
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/SafeCast.sol:SafeCast": {
        "src": "contracts/libraries/SafeCast.sol:6",
        "version": {
          "withMetadata": "eb0f4620ce6ec49fed5bf83973ef538f1902fdcf80c7faf6a7f49a8f110d98cd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath": {
        "src": "contracts/libraries/SqrtPriceMath.sol:13",
        "version": {
          "withMetadata": "818003f57026a3f333173656896a9a41778c0aa9408207919c8cf050daec42a1",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/FixedPoint96.sol:FixedPoint96",
          "contracts/libraries/FullMath.sol:FullMath",
          "contracts/libraries/UnsafeMath.sol:UnsafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/SwapMath.sol:SwapMath": {
        "src": "contracts/libraries/SwapMath.sol:9",
        "version": {
          "withMetadata": "0ea02cb4a11d2e77390ee002ddae6acc03677a9959b18201d69d16ae20cb5289",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath",
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/Tick.sol:Tick": {
        "src": "contracts/libraries/Tick.sol:12",
        "version": {
          "withMetadata": "0b08e35a7cda19db1fa025987e4e8d50c8a8487cea9fe3108b186052de2f0fc4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/LiquidityMath.sol:LiquidityMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TickBitmap.sol:TickBitmap": {
        "src": "contracts/libraries/TickBitmap.sol:9",
        "version": {
          "withMetadata": "97f731c6e826c4dff8608769ccd7fdbd970c99cceb873925a7de8f02346b88df",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TickMath.sol:TickMath": {
        "src": "contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "d7a51fa581d7775d24b02c1e87f63aceb0d6a8f0d33af68a531eb29b657b202c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "contracts/libraries/TransferHelper.sol:8",
        "version": {
          "withMetadata": "ac96221559f346d1d34d42236e87d2f309cc8f7722bfe278953f6f8f3ed17155",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/UnsafeMath.sol:UnsafeMath": {
        "src": "contracts/libraries/UnsafeMath.sol:6",
        "version": {
          "withMetadata": "fc50576d0cbc31ef8b9c6544a9012cc0ceb23e3c7e00cd9c446ec5a4f3f79cc0",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/BitMathEchidnaTest.sol:BitMathEchidnaTest": {
        "src": "contracts/test/BitMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "ca54d307e3396e662363f6ef1ca687fa1647268ce38a1bdd9ac2e826c80289ab",
          "withoutMetadata": "acbd7ab01e144046dc11226bc443f7b77055c9778ce259671e32fa0e77b0e886",
          "linkedWithoutMetadata": "acbd7ab01e144046dc11226bc443f7b77055c9778ce259671e32fa0e77b0e886"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [
          "mostSignificantBitInvariant(uint256)",
          "leastSignificantBitInvariant(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/BitMathTest.sol:BitMathTest": {
        "src": "contracts/test/BitMathTest.sol:6",
        "version": {
          "withMetadata": "fbcacd54b660232fb5cc52e7394f6476d8af2d4ce78fecff86f3c2ff52235f1f",
          "withoutMetadata": "760108482d34c3bae2c15b04577cf17c97bf78da07bf04064af715c49eb8aabd",
          "linkedWithoutMetadata": "760108482d34c3bae2c15b04577cf17c97bf78da07bf04064af715c49eb8aabd"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [
          "mostSignificantBit(uint256)",
          "getGasCostOfMostSignificantBit(uint256)",
          "leastSignificantBit(uint256)",
          "getGasCostOfLeastSignificantBit(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/FullMathEchidnaTest.sol:FullMathEchidnaTest": {
        "src": "contracts/test/FullMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "3cda71b1c127301648f2117b68df267ae1e678c1ef3b43133e62128ab75ee12c",
          "withoutMetadata": "a383590966b4c1cdb6aaee3dae33881d7716d4bd3b42ce2bd7e33d2016e3bed5",
          "linkedWithoutMetadata": "a383590966b4c1cdb6aaee3dae33881d7716d4bd3b42ce2bd7e33d2016e3bed5"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [
          "checkMulDivRounding(uint256,uint256,uint256)",
          "checkMulDiv(uint256,uint256,uint256)",
          "checkMulDivRoundingUp(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/FullMathTest.sol:FullMathTest": {
        "src": "contracts/test/FullMathTest.sol:6",
        "version": {
          "withMetadata": "b93bd3f54be53c8e3142e4ebe327c248b4d862da2305878435e76d3819fc83ac",
          "withoutMetadata": "548dd903e5a2721a08b24eadc10f3c7350a5a077def3c6a42808289823e92648",
          "linkedWithoutMetadata": "548dd903e5a2721a08b24eadc10f3c7350a5a077def3c6a42808289823e92648"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [
          "mulDiv(uint256,uint256,uint256)",
          "mulDivRoundingUp(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/LiquidityMathTest.sol:LiquidityMathTest": {
        "src": "contracts/test/LiquidityMathTest.sol:6",
        "version": {
          "withMetadata": "ef0f52efa785bd4b698cb07f80eb7c66ed74a2697500bba854ec781c5b89049b",
          "withoutMetadata": "cca8ef760d6aeab43b97e1ec5c2984f1e2a3f37401cc99e9f22d7a1fac11e37e",
          "linkedWithoutMetadata": "cca8ef760d6aeab43b97e1ec5c2984f1e2a3f37401cc99e9f22d7a1fac11e37e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LiquidityMath.sol:LiquidityMath"
        ],
        "methods": [
          "addDelta(uint128,int128)",
          "getGasCostOfAddDelta(uint128,int128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/LowGasSafeMathEchidnaTest.sol:LowGasSafeMathEchidnaTest": {
        "src": "contracts/test/LowGasSafeMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "8953638b2a6f62ac18494eedc6385dff136eb9bff97504c0118852520fa30c41",
          "withoutMetadata": "faba97e8f5f45abc18bfc1b54eeed71a923713d4a8b06e4864aba6df8656cb7e",
          "linkedWithoutMetadata": "faba97e8f5f45abc18bfc1b54eeed71a923713d4a8b06e4864aba6df8656cb7e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath"
        ],
        "methods": [
          "checkAdd(uint256,uint256)",
          "checkSub(uint256,uint256)",
          "checkMul(uint256,uint256)",
          "checkAddi(int256,int256)",
          "checkSubi(int256,int256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/MockTimeUniswapV3Pool.sol:MockTimeUniswapV3Pool": {
        "src": "contracts/test/MockTimeUniswapV3Pool.sol:7",
        "version": {
          "withMetadata": "4022f706ad395382ebfcb2df50970c5b2eaa706e267e2076901aab0f29091917",
          "withoutMetadata": "9781bb7219e1893dbf653322e6df8c7034aaf45636608cc7e1390fc3c691e196",
          "linkedWithoutMetadata": "9781bb7219e1893dbf653322e6df8c7034aaf45636608cc7e1390fc3c691e196"
        },
        "inherit": [
          "contracts/UniswapV3Pool.sol:UniswapV3Pool",
          "contracts/NoDelegateCall.sol:NoDelegateCall",
          "contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool",
          "contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [
          "setFeeGrowthGlobal0X128(uint256)",
          "setFeeGrowthGlobal1X128(uint256)",
          "advanceTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "time",
            "src": "contracts/test/MockTimeUniswapV3Pool.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "slot0",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Slot0)415_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:74"
            },
            {
              "label": "feeGrowthGlobal0X128",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:77"
            },
            {
              "label": "feeGrowthGlobal1X128",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:79"
            },
            {
              "label": "protocolFees",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(ProtocolFees)432_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:87"
            },
            {
              "label": "liquidity",
              "offset": 0,
              "slot": "4",
              "type": "t_uint128",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:90"
            },
            {
              "label": "ticks",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:93"
            },
            {
              "label": "tickBitmap",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:95"
            },
            {
              "label": "positions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_struct(Info)4924_storage)",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:97"
            },
            {
              "label": "observations",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_struct(Observation)4184_storage)65535_storage",
              "contract": "UniswapV3Pool",
              "src": "contracts/UniswapV3Pool.sol:99"
            },
            {
              "label": "time",
              "offset": 0,
              "slot": "65543",
              "type": "t_uint256",
              "contract": "MockTimeUniswapV3Pool",
              "src": "contracts/test/MockTimeUniswapV3Pool.sol:9"
            }
          ],
          "types": {
            "t_array(t_struct(Observation)4184_storage)65535_storage": {
              "label": "struct Oracle.Observation[65535]",
              "numberOfBytes": "2097120"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_bytes32,t_struct(Info)4924_storage)": {
              "label": "mapping(bytes32 => struct Position.Info)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)4924_storage": {
              "label": "struct Position.Info",
              "members": [
                {
                  "label": "liquidity",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthInside0LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthInside1LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokensOwed0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "tokensOwed1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Observation)4184_storage": {
              "label": "struct Oracle.Observation",
              "members": [
                {
                  "label": "blockTimestamp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickCumulative",
                  "type": "t_int56",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "secondsPerLiquidityCumulativeX128",
                  "type": "t_uint160",
                  "offset": 11,
                  "slot": "0"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ProtocolFees)432_storage": {
              "label": "struct UniswapV3Pool.ProtocolFees",
              "members": [
                {
                  "label": "token0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Slot0)415_storage": {
              "label": "struct UniswapV3Pool.Slot0",
              "members": [
                {
                  "label": "sqrtPriceX96",
                  "type": "t_uint160",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tick",
                  "type": "t_int24",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "observationIndex",
                  "type": "t_uint16",
                  "offset": 23,
                  "slot": "0"
                },
                {
                  "label": "observationCardinality",
                  "type": "t_uint16",
                  "offset": 25,
                  "slot": "0"
                },
                {
                  "label": "observationCardinalityNext",
                  "type": "t_uint16",
                  "offset": 27,
                  "slot": "0"
                },
                {
                  "label": "feeProtocol",
                  "type": "t_uint8",
                  "offset": 29,
                  "slot": "0"
                },
                {
                  "label": "unlocked",
                  "type": "t_bool",
                  "offset": 30,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/MockTimeUniswapV3PoolDeployer.sol:MockTimeUniswapV3PoolDeployer": {
        "src": "contracts/test/MockTimeUniswapV3PoolDeployer.sol:8",
        "version": {
          "withMetadata": "ea3f2243dc733b1627013ea189e8bef55918249b3ddcb10eabc368035ed3ca4a",
          "withoutMetadata": "adf6c97216bdbdfe4bd24ea5b69e0e8bf148c7fcf6bb6b2dd68e734840aa7492",
          "linkedWithoutMetadata": "adf6c97216bdbdfe4bd24ea5b69e0e8bf148c7fcf6bb6b2dd68e734840aa7492"
        },
        "inherit": [
          "contracts/interfaces/IUniswapV3PoolDeployer.sol:IUniswapV3PoolDeployer"
        ],
        "libraries": [],
        "methods": [
          "deploy(address,address,address,uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "parameters",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Parameters)7983_storage",
              "contract": "MockTimeUniswapV3PoolDeployer",
              "src": "contracts/test/MockTimeUniswapV3PoolDeployer.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_struct(Parameters)7983_storage": {
              "label": "struct MockTimeUniswapV3PoolDeployer.Parameters",
              "members": [
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "tickSpacing",
                  "type": "t_int24",
                  "offset": 23,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/NoDelegateCallTest.sol:NoDelegateCallTest": {
        "src": "contracts/test/NoDelegateCallTest.sol:6",
        "version": {
          "withMetadata": "e262585310c76b5b552e62b13af34e28f729b9ba0426f84b428d92dcdefabea1",
          "withoutMetadata": "f6986b5861202c2c75821dd3fac18c071e081dc4cb110719a4ad75fb35e587b1",
          "linkedWithoutMetadata": "f6986b5861202c2c75821dd3fac18c071e081dc4cb110719a4ad75fb35e587b1"
        },
        "inherit": [
          "contracts/NoDelegateCall.sol:NoDelegateCall"
        ],
        "libraries": [],
        "methods": [
          "canBeDelegateCalled()",
          "cannotBeDelegateCalled()",
          "getGasCostOfCanBeDelegateCalled()",
          "getGasCostOfCannotBeDelegateCalled()",
          "callsIntoNoDelegateCallFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/OracleEchidnaTest.sol:OracleEchidnaTest": {
        "src": "contracts/test/OracleEchidnaTest.sol:7",
        "version": {
          "withMetadata": "c594ad3c8fa7579af15abd7b706a096b3fa459bb8553ff835935050ac5be26a3",
          "withoutMetadata": "2c026ce5b78db5aa8667a66de21689099fc6e8388a79fb77561ed248d325012d",
          "linkedWithoutMetadata": "2c026ce5b78db5aa8667a66de21689099fc6e8388a79fb77561ed248d325012d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "initialize(uint32,int24,uint128)",
          "advanceTime(uint32)",
          "update(uint32,int24,uint128)",
          "grow(uint16)",
          "echidna_indexAlwaysLtCardinality()",
          "echidna_AlwaysInitialized()",
          "echidna_cardinalityAlwaysLteNext()",
          "echidna_canAlwaysObserve0IfInitialized()",
          "checkTwoAdjacentObservationsTickCumulativeModTimeElapsedAlways0(uint16)",
          "checkTimeWeightedAveragesAlwaysFitsType(uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OracleEchidnaTest",
            "src": "contracts/test/OracleEchidnaTest.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(OracleTest)9021",
              "contract": "OracleEchidnaTest",
              "src": "contracts/test/OracleEchidnaTest.sol:8"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "OracleEchidnaTest",
              "src": "contracts/test/OracleEchidnaTest.sol:10"
            },
            {
              "label": "timePassed",
              "offset": 21,
              "slot": "0",
              "type": "t_uint32",
              "contract": "OracleEchidnaTest",
              "src": "contracts/test/OracleEchidnaTest.sol:11"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(OracleTest)9021": {
              "label": "contract OracleTest",
              "numberOfBytes": "20"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/OracleTest.sol:OracleTest": {
        "src": "contracts/test/OracleTest.sol:7",
        "version": {
          "withMetadata": "f0fa27113a7d8ed173cca4de72a8174ebfe680586772f0b0af64a405d38d8759",
          "withoutMetadata": "2f5f2f3abadadf8c0cfc1ff9d0db87ee674bc9409cafc2c73a7d3ccacfd0bdbe",
          "linkedWithoutMetadata": "2f5f2f3abadadf8c0cfc1ff9d0db87ee674bc9409cafc2c73a7d3ccacfd0bdbe"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Oracle.sol:Oracle"
        ],
        "methods": [
          "initialize((uint32,int24,uint128))",
          "advanceTime(uint32)",
          "update((uint32,int24,uint128))",
          "batchUpdate(struct OracleTest.UpdateParams[])",
          "grow(uint16)",
          "observe(uint32[])",
          "getGasCostOfObserve(uint32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "observations",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(Observation)4184_storage)65535_storage",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:10"
            },
            {
              "label": "time",
              "offset": 0,
              "slot": "65535",
              "type": "t_uint32",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:12"
            },
            {
              "label": "tick",
              "offset": 4,
              "slot": "65535",
              "type": "t_int24",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:13"
            },
            {
              "label": "liquidity",
              "offset": 7,
              "slot": "65535",
              "type": "t_uint128",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:14"
            },
            {
              "label": "index",
              "offset": 23,
              "slot": "65535",
              "type": "t_uint16",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:15"
            },
            {
              "label": "cardinality",
              "offset": 25,
              "slot": "65535",
              "type": "t_uint16",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:16"
            },
            {
              "label": "cardinalityNext",
              "offset": 27,
              "slot": "65535",
              "type": "t_uint16",
              "contract": "OracleTest",
              "src": "contracts/test/OracleTest.sol:17"
            }
          ],
          "types": {
            "t_array(t_struct(Observation)4184_storage)65535_storage": {
              "label": "struct Oracle.Observation[65535]",
              "numberOfBytes": "2097120"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_struct(Observation)4184_storage": {
              "label": "struct Oracle.Observation",
              "members": [
                {
                  "label": "blockTimestamp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickCumulative",
                  "type": "t_int56",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "secondsPerLiquidityCumulativeX128",
                  "type": "t_uint160",
                  "offset": 11,
                  "slot": "0"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SqrtPriceMathEchidnaTest.sol:SqrtPriceMathEchidnaTest": {
        "src": "contracts/test/SqrtPriceMathEchidnaTest.sol:8",
        "version": {
          "withMetadata": "63a71df2c1af1da0ae35075a9fd9cf67f5a59c2a366b4bdf4ee9cd50fc531724",
          "withoutMetadata": "8a20dce8d31ef81c47b894e5838ff62387e282b09cba7cfc1dc03300d64fb45e",
          "linkedWithoutMetadata": "8a20dce8d31ef81c47b894e5838ff62387e282b09cba7cfc1dc03300d64fb45e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/FullMath.sol:FullMath",
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath",
          "contracts/libraries/FixedPoint96.sol:FixedPoint96"
        ],
        "methods": [
          "mulDivRoundingUpInvariants(uint256,uint256,uint256)",
          "getNextSqrtPriceFromInputInvariants(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromOutputInvariants(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromAmount0RoundingUpInvariants(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromAmount1RoundingDownInvariants(uint160,uint128,uint256,bool)",
          "getAmount0DeltaInvariants(uint160,uint160,uint128)",
          "getAmount0DeltaEquivalency(uint160,uint160,uint128,bool)",
          "getAmount1DeltaInvariants(uint160,uint160,uint128)",
          "getAmount0DeltaSignedInvariants(uint160,uint160,int128)",
          "getAmount1DeltaSignedInvariants(uint160,uint160,int128)",
          "getOutOfRangeMintInvariants(uint160,uint160,int128)",
          "getInRangeMintInvariants(uint160,uint160,uint160,int128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SqrtPriceMathTest.sol:SqrtPriceMathTest": {
        "src": "contracts/test/SqrtPriceMathTest.sol:6",
        "version": {
          "withMetadata": "3cefd558287a1d0957a472d38b85e22d13e36bea273404ec075c5b84344b9af0",
          "withoutMetadata": "92e484ef5f2120461b9f6e4f325a9f4fc9d2253f8f85dbe86f8ef4fa23b8c490",
          "linkedWithoutMetadata": "92e484ef5f2120461b9f6e4f325a9f4fc9d2253f8f85dbe86f8ef4fa23b8c490"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SqrtPriceMath.sol:SqrtPriceMath"
        ],
        "methods": [
          "getNextSqrtPriceFromInput(uint160,uint128,uint256,bool)",
          "getGasCostOfGetNextSqrtPriceFromInput(uint160,uint128,uint256,bool)",
          "getNextSqrtPriceFromOutput(uint160,uint128,uint256,bool)",
          "getGasCostOfGetNextSqrtPriceFromOutput(uint160,uint128,uint256,bool)",
          "getAmount0Delta(uint160,uint160,uint128,bool)",
          "getAmount1Delta(uint160,uint160,uint128,bool)",
          "getGasCostOfGetAmount0Delta(uint160,uint160,uint128,bool)",
          "getGasCostOfGetAmount1Delta(uint160,uint160,uint128,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SwapMathEchidnaTest.sol:SwapMathEchidnaTest": {
        "src": "contracts/test/SwapMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "59e4523492c49c8b90ed7fe1bc544dd39b0df6d7c65ca6a1eb7d43a69b20b2d6",
          "withoutMetadata": "385cc894d313098f0efb500688429eecc59951e44d30ac4707c80cdb4ccdd435",
          "linkedWithoutMetadata": "385cc894d313098f0efb500688429eecc59951e44d30ac4707c80cdb4ccdd435"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SwapMath.sol:SwapMath"
        ],
        "methods": [
          "checkComputeSwapStepInvariants(uint160,uint160,uint128,int256,uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SwapMathTest.sol:SwapMathTest": {
        "src": "contracts/test/SwapMathTest.sol:6",
        "version": {
          "withMetadata": "b4ff5859d08f083b2f6cec7fc3805229db9ce43fb39cc19884a109e7928a6983",
          "withoutMetadata": "f757a9d4af042c53685a3d91965d335b14e9757877f4b147f274ca062e376922",
          "linkedWithoutMetadata": "f757a9d4af042c53685a3d91965d335b14e9757877f4b147f274ca062e376922"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SwapMath.sol:SwapMath"
        ],
        "methods": [
          "computeSwapStep(uint160,uint160,uint128,int256,uint24)",
          "getGasCostOfComputeSwapStep(uint160,uint160,uint128,int256,uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestERC20.sol:TestERC20": {
        "src": "contracts/test/TestERC20.sol:6",
        "version": {
          "withMetadata": "f29eec4da2634eb1b1e1774730a63917bd98a460a57a2cde3c8f9051178ac7cf",
          "withoutMetadata": "8bf7e5635d769ba4cd33d8a8f50985318c408761758512590d81877c4c337d40",
          "linkedWithoutMetadata": "8bf7e5635d769ba4cd33d8a8f50985318c408761758512590d81877c4c337d40"
        },
        "inherit": [
          "contracts/interfaces/IERC20Minimal.sol:IERC20Minimal"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TestERC20",
            "src": "contracts/test/TestERC20.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TestERC20",
              "src": "contracts/test/TestERC20.sol:7"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TestERC20",
              "src": "contracts/test/TestERC20.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3Callee.sol:TestUniswapV3Callee": {
        "src": "contracts/test/TestUniswapV3Callee.sol:15",
        "version": {
          "withMetadata": "cab3a1df7b850f8e59487ebca3a06d55869ecc45ade591b263ba91d53828f75a",
          "withoutMetadata": "674fe9d39acb693543d58dc1e9767f9d26c0cbd551c7674842267b31c48888ab",
          "linkedWithoutMetadata": "674fe9d39acb693543d58dc1e9767f9d26c0cbd551c7674842267b31c48888ab"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3FlashCallback.sol:IUniswapV3FlashCallback",
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback",
          "contracts/interfaces/callback/IUniswapV3MintCallback.sol:IUniswapV3MintCallback"
        ],
        "libraries": [
          "contracts/libraries/SafeCast.sol:SafeCast"
        ],
        "methods": [
          "swapExact0For1(address,uint256,address,uint160)",
          "swap0ForExact1(address,uint256,address,uint160)",
          "swapExact1For0(address,uint256,address,uint160)",
          "swap1ForExact0(address,uint256,address,uint160)",
          "swapToLowerSqrtPrice(address,uint160,address)",
          "swapToHigherSqrtPrice(address,uint160,address)",
          "uniswapV3SwapCallback(int256,int256,bytes)",
          "mint(address,address,int24,int24,uint128)",
          "uniswapV3MintCallback(uint256,uint256,bytes)",
          "flash(address,address,uint256,uint256,uint256,uint256)",
          "uniswapV3FlashCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3ReentrantCallee.sol:TestUniswapV3ReentrantCallee": {
        "src": "contracts/test/TestUniswapV3ReentrantCallee.sol:10",
        "version": {
          "withMetadata": "72f8c95f084a0e8c115d725d1b45b4d33d11ac29ff8f42d651bfd48a58b4523c",
          "withoutMetadata": "fe606b5fff1193016531519808b5e861f47296325a3edaf251049add6329a7d4",
          "linkedWithoutMetadata": "fe606b5fff1193016531519808b5e861f47296325a3edaf251049add6329a7d4"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "swapToReenter(address)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3Router.sol:TestUniswapV3Router": {
        "src": "contracts/test/TestUniswapV3Router.sol:11",
        "version": {
          "withMetadata": "ace6da7927be628a00a2f139845bff855b1104cdf6b9393b488d00ed8e6a475c",
          "withoutMetadata": "ff303de856962da1b08f1fcd8ab1579f58eb2e6b622f20dcd385a13b3b005756",
          "linkedWithoutMetadata": "ff303de856962da1b08f1fcd8ab1579f58eb2e6b622f20dcd385a13b3b005756"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [
          "contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "swapForExact0Multi(address,address,address,uint256)",
          "swapForExact1Multi(address,address,address,uint256)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestUniswapV3SwapPay.sol:TestUniswapV3SwapPay": {
        "src": "contracts/test/TestUniswapV3SwapPay.sol:9",
        "version": {
          "withMetadata": "6ef56d12fe330f260b952c8c56414be5eca1cd75b7fe8c72d069609fee25632e",
          "withoutMetadata": "ed07bcb0bfd2a49b3a07a922554976d190512b6fd436a348cec905a2fc3b32db",
          "linkedWithoutMetadata": "ed07bcb0bfd2a49b3a07a922554976d190512b6fd436a348cec905a2fc3b32db"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "swap(address,address,bool,uint160,int256,uint256,uint256)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickBitmapEchidnaTest.sol:TickBitmapEchidnaTest": {
        "src": "contracts/test/TickBitmapEchidnaTest.sol:6",
        "version": {
          "withMetadata": "cc3a032077402487db3a1f9f844b4976e37128be50887489819aabaa6fe143ef",
          "withoutMetadata": "a31b6ba825eaba8ddee63851cd06ce8ae77b66f05f489a6f00e93837e1a55ce3",
          "linkedWithoutMetadata": "a31b6ba825eaba8ddee63851cd06ce8ae77b66f05f489a6f00e93837e1a55ce3"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickBitmap.sol:TickBitmap"
        ],
        "methods": [
          "flipTick(int24)",
          "checkNextInitializedTickWithinOneWordInvariants(int24,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bitmap",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "TickBitmapEchidnaTest",
              "src": "contracts/test/TickBitmapEchidnaTest.sol:9"
            }
          ],
          "types": {
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickBitmapTest.sol:TickBitmapTest": {
        "src": "contracts/test/TickBitmapTest.sol:6",
        "version": {
          "withMetadata": "12fcdadec26dbbaaab5fd0d447ba596da963412eb399b978a11967e66d4342bf",
          "withoutMetadata": "be63fb8b21abd82f38d1c29c63630caaf91de99da390ee24fb33956e02db96f9",
          "linkedWithoutMetadata": "be63fb8b21abd82f38d1c29c63630caaf91de99da390ee24fb33956e02db96f9"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickBitmap.sol:TickBitmap"
        ],
        "methods": [
          "flipTick(int24)",
          "getGasCostOfFlipTick(int24)",
          "nextInitializedTickWithinOneWord(int24,bool)",
          "getGasCostOfNextInitializedTickWithinOneWord(int24,bool)",
          "isInitialized(int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bitmap",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int16,t_uint256)",
              "contract": "TickBitmapTest",
              "src": "contracts/test/TickBitmapTest.sol:9"
            }
          ],
          "types": {
            "t_int16": {
              "label": "int16",
              "numberOfBytes": "2"
            },
            "t_mapping(t_int16,t_uint256)": {
              "label": "mapping(int16 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickEchidnaTest.sol:TickEchidnaTest": {
        "src": "contracts/test/TickEchidnaTest.sol:6",
        "version": {
          "withMetadata": "44c6410dda6128c7afed3726222333d13b2a1b5f2b17ac4af4c3b66682a05a10",
          "withoutMetadata": "94fc5579b9e54eef0d049aa8f845eaace13b7ebe665d64d4abad8959a052cc17",
          "linkedWithoutMetadata": "94fc5579b9e54eef0d049aa8f845eaace13b7ebe665d64d4abad8959a052cc17"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/Tick.sol:Tick"
        ],
        "methods": [
          "checkTickSpacingToParametersInvariants(int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickMathEchidnaTest.sol:TickMathEchidnaTest": {
        "src": "contracts/test/TickMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "6e96539254ffa93b317a6093b71413846d22f5d12754525f6ac1cf586a0488c4",
          "withoutMetadata": "d049a5706d9712fdf4d8499f35e45ff2e8a73f1449632a3ad35b253472689b34",
          "linkedWithoutMetadata": "d049a5706d9712fdf4d8499f35e45ff2e8a73f1449632a3ad35b253472689b34"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "checkGetSqrtRatioAtTickInvariants(int24)",
          "checkGetTickAtSqrtRatioInvariants(uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickMathTest.sol:TickMathTest": {
        "src": "contracts/test/TickMathTest.sol:6",
        "version": {
          "withMetadata": "7d80fdeeeb44c03b2ef8c47891fa7fb62752afe193c74a76db6fd1f55cd94b15",
          "withoutMetadata": "d5f4699454cdb9a6dbbfe68dd2437ef65ecf95ae978bdcfb0487bb29391f504e",
          "linkedWithoutMetadata": "d5f4699454cdb9a6dbbfe68dd2437ef65ecf95ae978bdcfb0487bb29391f504e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "getSqrtRatioAtTick(int24)",
          "getGasCostOfGetSqrtRatioAtTick(int24)",
          "getTickAtSqrtRatio(uint160)",
          "getGasCostOfGetTickAtSqrtRatio(uint160)",
          "MIN_SQRT_RATIO()",
          "MAX_SQRT_RATIO()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickOverflowSafetyEchidnaTest.sol:TickOverflowSafetyEchidnaTest": {
        "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:6",
        "version": {
          "withMetadata": "96bf2398e0ffe6c5c9bfd51307c93ef56f854a2752dbd069b54c56893e28a9f2",
          "withoutMetadata": "becdf086516c635593c80c348cfb38e82bffbf43373778c65bfe09319591ab7a",
          "linkedWithoutMetadata": "becdf086516c635593c80c348cfb38e82bffbf43373778c65bfe09319591ab7a"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Tick.sol:Tick"
        ],
        "methods": [
          "increaseFeeGrowthGlobal0X128(uint256)",
          "increaseFeeGrowthGlobal1X128(uint256)",
          "setPosition(int24,int24,int128)",
          "moveToTick(int24)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "tick",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalLiquidity",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeGrowthGlobal0X128",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeGrowthGlobal1X128",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalGrowth0",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalGrowth1",
            "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ticks",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:13"
            },
            {
              "label": "tick",
              "offset": 0,
              "slot": "1",
              "type": "t_int24",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:14"
            },
            {
              "label": "totalLiquidity",
              "offset": 0,
              "slot": "2",
              "type": "t_int256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:17"
            },
            {
              "label": "feeGrowthGlobal0X128",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:19"
            },
            {
              "label": "feeGrowthGlobal1X128",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:20"
            },
            {
              "label": "totalGrowth0",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:22"
            },
            {
              "label": "totalGrowth1",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TickOverflowSafetyEchidnaTest",
              "src": "contracts/test/TickOverflowSafetyEchidnaTest.sol:23"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickTest.sol:TickTest": {
        "src": "contracts/test/TickTest.sol:7",
        "version": {
          "withMetadata": "c9dd1b1017aa54f2f910ff83bd50552fdf18a02f11f3085b7580ed396868a765",
          "withoutMetadata": "f1d4bae4f0eb8bc9acedd5df27e9b1373e58f02af8ae788c239c5624d5914bcc",
          "linkedWithoutMetadata": "f1d4bae4f0eb8bc9acedd5df27e9b1373e58f02af8ae788c239c5624d5914bcc"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Tick.sol:Tick"
        ],
        "methods": [
          "tickSpacingToMaxLiquidityPerTick(int24)",
          "setTick(int24,(uint128,int128,uint256,uint256,int56,uint160,uint32,bool))",
          "getFeeGrowthInside(int24,int24,int24,uint256,uint256)",
          "update(int24,int24,int128,uint256,uint256,uint160,int56,uint32,bool,uint128)",
          "clear(int24)",
          "cross(int24,uint256,uint256,uint160,int56,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "ticks",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_int24,t_struct(Info)5957_storage)",
              "contract": "TickTest",
              "src": "contracts/test/TickTest.sol:10"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_mapping(t_int24,t_struct(Info)5957_storage)": {
              "label": "mapping(int24 => struct Tick.Info)",
              "numberOfBytes": "32"
            },
            "t_struct(Info)5957_storage": {
              "label": "struct Tick.Info",
              "members": [
                {
                  "label": "liquidityGross",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidityNet",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "feeGrowthOutside0X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthOutside1X128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tickCumulativeOutside",
                  "type": "t_int56",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "secondsPerLiquidityOutsideX128",
                  "type": "t_uint160",
                  "offset": 7,
                  "slot": "3"
                },
                {
                  "label": "secondsOutside",
                  "type": "t_uint32",
                  "offset": 27,
                  "slot": "3"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/UniswapV3PoolSwapTest.sol:UniswapV3PoolSwapTest": {
        "src": "contracts/test/UniswapV3PoolSwapTest.sol:9",
        "version": {
          "withMetadata": "a9dcb1147fc304c883e7c6e89681d5ef4198f46f25e2813b469031b7575f6664",
          "withoutMetadata": "a57326d1f1cced75ba1e49652053232db528072e52aac1084a8027530a0c495c",
          "linkedWithoutMetadata": "a57326d1f1cced75ba1e49652053232db528072e52aac1084a8027530a0c495c"
        },
        "inherit": [
          "contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "getSwapResult(address,bool,int256,uint160)",
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_amount0Delta",
              "offset": 0,
              "slot": "0",
              "type": "t_int256",
              "contract": "UniswapV3PoolSwapTest",
              "src": "contracts/test/UniswapV3PoolSwapTest.sol:10"
            },
            {
              "label": "_amount1Delta",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UniswapV3PoolSwapTest",
              "src": "contracts/test/UniswapV3PoolSwapTest.sol:11"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/UnsafeMathEchidnaTest.sol:UnsafeMathEchidnaTest": {
        "src": "contracts/test/UnsafeMathEchidnaTest.sol:6",
        "version": {
          "withMetadata": "47e70e9225a55e2bf8e449003dd4b237e5d3bbfc7b3b144ebe9f8f37848d9613",
          "withoutMetadata": "6111038855a82b46238fa4ca38d0c27948d9433d99b623e4b3054609f1a44745",
          "linkedWithoutMetadata": "6111038855a82b46238fa4ca38d0c27948d9433d99b623e4b3054609f1a44745"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/UnsafeMath.sol:UnsafeMath"
        ],
        "methods": [
          "checkDivRoundingUp(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.7.6"
      }
    }
  ]
}